{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/PostAdd.js","components/PostCard/Reactions.js","components/PostCard/Comment.js","components/PostCard/CommentAdd.js","components/PostCard/index.js","views/social/ProfileView/Header.js","views/social/ProfileView/Timeline/About.js","views/social/ProfileView/Timeline/index.js","views/social/ProfileView/Connections.js","components/ProjectCard.js","views/social/ProfileView/Projects/index.js","views/social/ProfileView/Reviews/OverallReviews.js","views/social/ProfileView/Reviews/ReviewCard.js","views/social/ProfileView/Reviews/index.js","views/social/ProfileView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","root","divider","width","height","fileInput","display","PostAdd","className","rest","classes","fileInputRef","useState","value","setValue","account","useSelector","state","handleAttach","click","clsx","alignItems","component","Box","flexGrow","py","px","variant","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","user","firstName","title","color","length","edge","onClick","ref","type","likedButton","colors","red","Reactions","post","liked","setLiked","likes","setLikes","Tooltip","IconButton","prevLikes","fontSize","Typography","theme","marginBottom","spacing","bubble","borderRadius","shape","Comment","comment","Avatar","alt","RouterLink","src","author","avatar","to","p","ml","bgcolor","mb","Link","moment","createdAt","fromNow","message","CommentAdd","Paper","Input","Divider","date","marginLeft","media","backgroundPosition","PostCard","openedFile","setOpenedFile","Card","CardHeader","disableTypography","subheader","pb","mt","CardActionArea","CardMedia","image","my","comments","key","id","large","onClose","cover","position","backgroundSize","backgroundRepeat","content","top","left","backgroundImage","visibility","changeButton","bottom","right","backgroundColor","blueGrey","palette","common","white","breakpoints","down","addPhotoIcon","marginRight","border","action","Header","connectedStatus","setConnectedStatus","handleConnectToggle","prevConnectedStatus","style","Button","Container","maxWidth","bio","Hidden","smDown","size","jobAvatar","secondary","main","cityAvatar","About","CardContent","LinearProgress","profileProgress","quote","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","currentJob","href","company","previousJob","primaryTypographyProps","currentCity","originCity","email","Timeline","isMountedRef","posts","setPosts","getPosts","useCallback","axios","get","then","response","data","Grid","container","item","xs","md","lg","connectStatusMap","not_connected","pending","connected","searchInput","Connections","enqueueSnackbar","useSnackbar","connections","setConnections","search","setSearch","getConnections","SvgIcon","filter","connection","toLowerCase","includes","mx","gutterBottom","status","prevConnections","_","clone","newConnection","background","dark","subscribersIcon","ProjectCard","project","isLiked","getInitials","updatedAt","description","justify","location","technology","pl","pr","subscribers","Rating","rating","readOnly","Projects","projects","setProjects","getProjects","lx","fontWeight","typography","fontWeightBold","OverallReviews","ratings","reduce","prev","total","ReviewCard","review","reviewer","flexWrap","mr","currency","price","pricePerHour","hours","marginTop","Reviews","reviews","setReviews","getReviews","tabs","label","minHeight","ProfileView","currentTab","setCurrentTab","setUser","Page","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/21.9cfd1178.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction PostAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n  const account = useSelector((state) => state.account);\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Paper\n            component={Box}\n            flexGrow={1}\n            py={0.5}\n            px={2}\n            variant=\"outlined\"\n          >\n            <Input\n              disableUnderline\n              fullWidth\n              onChange={handleChange}\n              placeholder={`What's on your mind, ${account.user.firstName}`}\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n          <Divider className={classes.divider} />\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n          <input\n            className={classes.fileInput}\n            ref={fileInputRef}\n            type=\"file\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nPostAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PostAdd;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  }\n}));\n\nfunction Reactions({ post, className, ...rest }) {\n  const classes = useStyles();\n  const [liked, setLiked] = useState(post.liked);\n  const [likes, setLikes] = useState(post.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {liked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton\n            className={classes.likedButton}\n            onClick={handleUnlike}\n          >\n            <FavoriteIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <FavoriteBorderIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography\n        color=\"textSecondary\"\n        variant=\"h6\"\n      >\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nfunction Comment({ comment, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"#\"\n      />\n      <Box\n        flexGrow={1}\n        p={2}\n        ml={2}\n        bgcolor=\"background.dark\"\n        className={classes.bubble}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mb={1}\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {comment.author.name}\n          </Link>\n          <Box flexGrow={1} />\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(comment.createdAt).fromNow()}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          {comment.message}\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  className: PropTypes.string,\n  comment: PropTypes.object.isRequired\n};\n\nexport default Comment;\n","import React, { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction CommentAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <Paper\n        variant=\"outlined\"\n        flexGrow={1}\n        component={Box}\n        ml={2}\n        py={0.5}\n        px={2}\n      >\n        <Input\n          disableUnderline\n          fullWidth\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n}\n\nCommentAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nfunction PostCard({ className, post, ...rest }) {\n  const classes = useStyles();\n  const [openedFile, setOpenedFile] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              className={classes.avatar}\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setOpenedFile(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {openedFile && (\n        <Lightbox\n          large={openedFile}\n          onClose={() => setOpenedFile(null)}\n        />\n      )}\n    </>\n  );\n}\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 460,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [connectedStatus, setConnectedStatus] = useState(user.connectedStatus);\n\n  const handleConnectToggle = () => {\n    setConnectedStatus((prevConnectedStatus) => (prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected'));\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${user.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n        >\n          <AddPhotoIcon className={classes.addPhotoIcon} />\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box\n          position=\"relative\"\n          mt={1}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Box marginLeft=\"160px\">\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {user.bio}\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {user.name}\n            </Typography>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            {connectedStatus === 'not_connected' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Connect\n              </Button>\n            )}\n            {connectedStatus === 'pending' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Pending\n              </Button>\n            )}\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/app/chat\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Send message\n            </Button>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton className={classes.action}>\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  LinearProgress,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Plus as PlusIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n  Briefcase as BriefcaseIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  jobAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  cityAvatar: {\n    backgroundColor: colors.red[600]\n  }\n}));\n\nfunction About({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader title=\"Profile Progress\" />\n        <Divider />\n        <CardContent>\n          <LinearProgress\n            variant=\"determinate\"\n            value={user.profileProgress}\n          />\n          <Box mt={2}>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              50% Set Up Complete\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n      <Box mt={3}>\n        <Card>\n          <CardHeader title=\"About\" />\n          <Divider />\n          <CardContent>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              &quot;\n              {user.quote}\n              &quot;\n            </Typography>\n            <List>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.jobAvatar}>\n                    <BriefcaseIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {user.currentJob.title}\n                      {' '}\n                      at\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Past:\n                      {user.previousJob.title}\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.previousJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <PlusIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Add school or collage\"\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <HomeIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      Lives in\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentCity}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Originally from\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.originCity}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <MailIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={user.email}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textPrimary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostAdd from 'src/components/PostAdd';\nimport PostCard from 'src/components/PostCard';\nimport About from './About';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Timeline({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState(null);\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/users/1/posts')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setPosts(response.data.posts);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={4}\n        >\n          <About user={user} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={8}\n        >\n          <PostAdd />\n          {posts && posts.map((post) => (\n            <Box\n              mt={3}\n              key={post.id}\n            >\n              <PostCard post={post} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nTimeline.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Timeline;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  Paper,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  Search as SearchIcon,\n  MoreVertical as MoreIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst connectStatusMap = {\n  not_connected: 'Connect',\n  pending: 'Pending',\n  connected: 'Connected'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nfunction Connections({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [connections, setConnections] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleConnectToggle = (id) => {\n    setConnections((prevConnections) => {\n      const newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map((connection) => {\n        if (connection.id === id) {\n          const newConnection = { ...connection };\n\n          newConnection.status = connection.status === 'connected' || connection.status === 'pending'\n            ? 'not_connected'\n            : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  const getConnections = useCallback(() => {\n    axios\n      .get('/api/social/users/1/connections')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setConnections(response.data.connections);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  if (!connections) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n        >\n          <SearchIcon />\n        </SvgIcon>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n          placeholder=\"Search connections\"\n        />\n      </Box>\n      <Divider />\n      <Box p={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {connections\n            .filter((connection) => connection.name.toLowerCase().includes(search))\n            .map((connection) => (\n              <Grid\n                item\n                key={connection.id}\n                xs={12}\n                md={6}\n              >\n                <Paper variant=\"outlined\">\n                  <Box\n                    p={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <Avatar\n                      alt=\"Profile image\"\n                      className={classes.avatar}\n                      component={RouterLink}\n                      src={connection.avatar}\n                      to=\"#\"\n                    />\n                    <Box\n                      flexGrow={1}\n                      mx={2}\n                    >\n                      <Link\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        {connection.common}\n                        {' '}\n                        connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <SvgIcon fontSize=\"small\">\n                        <MoreIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Connections;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/projects')\n        .then((response) => setProjects(response.data.projects));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            lg={4}\n            lx={4}\n            md={6}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction OverallReviews({ ratings, className, ...rest }) {\n  const classes = useStyles();\n  let rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce((prev, current) => prev + current, 0) / ratings.length;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Overall Reviews\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Rating value={rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                {rating}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography\n              className={classes.total}\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {ratings.length}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\n\nexport default OverallReviews;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction ReviewCard({ review, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Reviewer\"\n            className={classes.avatar}\n            src={review.reviewer.avatar}\n          >\n            {getInitials(review.reviewer.name)}\n          </Avatar>\n        )}\n        disableTypography\n        subheader={(\n          <Box\n            flexWrap=\"wrap\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              mr={1}\n            >\n              <Rating value={review.rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n              >\n                {review.rating}\n              </Typography>\n            </Box>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              | Reviewd by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {review.reviewer.name}\n              </Link>\n              {' '}\n              |\n              {' '}\n              {moment(review.createdAt).fromNow()}\n            </Typography>\n          </Box>\n        )}\n        title={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h5\"\n          >\n            {review.project.title}\n          </Link>\n        )}\n      />\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {review.message}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.project.price}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Project price\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.pricePerHour}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Per project\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.hours}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Hours\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nReviewCard.propTypes = {\n  className: PropTypes.string,\n  review: PropTypes.object.isRequired\n};\n\nexport default ReviewCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport OverallReviews from './OverallReviews';\nimport ReviewCard from './ReviewCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  review: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Reviews({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [reviews, setReviews] = useState(null);\n\n  const getReviews = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/reviews')\n        .then((response) => setReviews(response.data.reviews));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <OverallReviews ratings={reviews.map((review) => review.rating)} />\n      {reviews.map((review) => (\n        <ReviewCard\n          className={classes.review}\n          key={review.id}\n          review={review}\n        />\n      ))}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Reviews;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Timeline from './Timeline';\nimport Connections from './Connections';\nimport Projects from './Projects';\nimport Reviews from './Reviews';\n\nconst tabs = [\n  { value: 'timeline', label: 'Timeline' },\n  { value: 'connections', label: 'Connections' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'reviews', label: 'Reviews' }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nfunction ProfileView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('timeline');\n  const [user, setUser] = useState(null);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/profile')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setUser(response.data.user);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Header user={user} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box\n          py={3}\n          pb={6}\n        >\n          {currentTab === 'timeline' && <Timeline user={user} />}\n          {currentTab === 'connections' && <Connections />}\n          {currentTab === 'projects' && <Projects />}\n          {currentTab === 'reviews' && <Reviews />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProfileView;\n"],"sourceRoot":""}