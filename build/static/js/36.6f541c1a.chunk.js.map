{"version":3,"sources":["views/reports/LogsView/Header.js","store/actions/logsAction.js","views/reports/LogsView/Results.js","views/reports/LogsView/index.js"],"names":["useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","rest","classes","Grid","container","justify","clsx","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","config","headers","avalabilityOptions","id","name","options","filter","filterType","responsive","selectableRows","fixedHeaderOptions","xAxis","yAxis","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","width","zIndex","backgroundColor","palette","background","default","availabilityField","flexBasis","searchField","datePicker","Results","products","dispatch","useDispatch","user","useSelector","state","account","columns","logs","data","userid","useState","moment","subtract","startDate","setStartDate","endDate","setEndDate","category","availability","filters","setFilters","useEffect","tableType","a","body","sensor","axios","post","process","res","console","log","type","payload","message","status","getLogData","Card","Box","p","display","alignItems","xs","sm","lg","xl","TextField","label","onChange","event","persist","value","target","prevFilters","select","SelectProps","native","map","avalabilityOption","key","flexGrow","mt","format","inputVariant","date","md","defaultProps","dark","minHeight","paddingTop","paddingBottom","LogListView","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/36.6f541c1a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// import { useSelector } from 'react-redux';\nimport {\n  Breadcrumbs,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Logs\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Logs\n        </Typography>\n\n      </Grid>\n\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nconst config = {\n  headers: {\n    'content-type': 'application/json'\n  }\n};\n\n\nexport const getLogData = (tableType, userid, startDate, endDate) => async (dispatch) => {\n  const body = {\n    sensor: tableType,\n    userid,\n    startDate,\n    endDate\n  };\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_URL}/logs/`, body, config);\n    console.log(res.data);\n    dispatch({\n      type: 'GET_LOG_DATA',\n      payload: res.data\n\n    });\n  } catch (err) {\n    dispatch({\n      type: 'GET_ERROR',\n      message: err.res.data,\n      status: err.res.status,\n      id: 'LOGS_FAIL'\n    });\n  }\n};\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n// import { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport MUIDataTable from 'mui-datatables';\nimport PropTypes from 'prop-types';\nimport { getLogData } from 'src/store/actions/logsAction';\nimport {\n  Box,\n  Card,\n  Grid,\n  TextField,\n  makeStyles,\n\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n// import { findChildren } from '@fullcalendar/core';\n// import Label from 'src/components/Label';\n\n\nconst avalabilityOptions = [\n  {\n    id: 'Va',\n    name: 'Phase_A Voltage'\n  },\n  {\n    id: 'Vb',\n    name: 'Phase_B Voltage'\n  },\n  {\n    id: 'Vc',\n    name: 'Phase_C Voltage'\n  },\n  {\n    id: 'Ia',\n    name: 'Phase_A Current'\n  },\n  {\n    id: 'Ib',\n    name: 'Phase_B Current'\n  },\n  {\n    id: 'Ic',\n    name: 'Phase_C Current'\n  },\n  {\n    id: 'Pf',\n    name: 'Power Factor'\n  },\n  {\n    id: 'PR',\n    name: 'Real Power'\n  },\n  {\n    id: 'PA',\n    name: 'Apperent Power'\n  },\n  {\n    id: 'U',\n    name: 'Units'\n  }\n\n];\nconst options = {\n  filter: true,\n  filterType: 'dropdown',\n  responsive: 'scrollMaxHeight',\n  selectableRows: 'none',\n  fixedHeaderOptions: {\n    xAxis: false,\n    yAxis: true\n  }\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  searchField: {\n    width: 500\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n\n  }\n}));\n\nfunction Results({ className, products, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.account.user);\n  const columns = useSelector((state) => state.logs.columns);\n  const data = useSelector((state) => state.logs.logs);\n  const { userid } = user;\n  // const [tabletype, setTabletype] = useState('Va');\n  const [startDate, setStartDate] = useState(moment().subtract(7, 'days'));\n  const [endDate, setEndDate] = useState(moment());\n  // const [selectEdge, setSelectEdge] = useState(null);\n  // const [calendarDate, setCalendarDate] = useState(moment());\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: 'Va',\n  });\n  const type = filters.availability;\n\n\n  const handleLogTypeChange = (event) => {\n    event.persist();\n    let value = null;\n    value = event.target.value;\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n    // setTabletype(filters.availability);\n  };\n\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setEndDate(date);\n  };\n\n\n  useEffect(() => {\n    dispatch(getLogData(filters.availability, userid, startDate, endDate));\n  }, [filters.availability, startDate, endDate]);\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {/* <Grid container justify=\"center\"> */}\n          <Grid item xs={12} sm={12} lg={6} xl={6} alignItems=\"left\">\n            <TextField\n              className={classes.searchField}\n              label=\"Log Type\"\n              name=\"availability\"\n              onChange={handleLogTypeChange}\n              select\n              SelectProps={{ native: true }}\n              value={filters.availability || 'Phase_A Voltage'}\n              variant=\"outlined\"\n            >\n              {avalabilityOptions.map((avalabilityOption) => (\n                <option\n                  key={avalabilityOption.id}\n                  value={avalabilityOption.id}\n                >\n                  {avalabilityOption.name}\n                </option>\n              ))}\n            </TextField>\n\n          </Grid>\n\n          {/* </Grid> */}\n\n          <Box flexGrow={1} />\n          <Box\n            mt={3}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {/* <Grid item xs={12} sm={12} lg={6} xl={6} alignItems=\"right\"> */}\n            <KeyboardDatePicker\n              className={classes.datePicker}\n              label=\"Start Date\"\n              format=\"MM/DD/YYYY\"\n              name=\"startDate\"\n              inputVariant=\"outlined\"\n              value={startDate}\n              onChange={handleStartDateChange}\n            />\n            {/* </Grid>\n            <Grid item xs={12} sm={12} lg={3} xl={3} alignItems=\"\"> */}\n            <KeyboardDatePicker\n              className={classes.datePicker}\n              label=\"End Date\"\n              format=\"MM/DD/YYYY\"\n              name=\"endDate\"\n              inputVariant=\"outlined\"\n              value={endDate}\n              onChange={handleEndDateChange}\n            />\n            {/* </Grid> */}\n          </Box>\n\n\n        </Box>\n\n      </Box>\n\n      <Grid item xs={12} md={12} xl={12} lg={12} alignItems=\"center\">\n        <MUIDataTable\n          columns={columns}\n          data={data}\n          options={options}\n        />\n      </Grid>\n\n\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction LogListView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Logs\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <Results />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default LogListView;\n"],"sourceRoot":""}