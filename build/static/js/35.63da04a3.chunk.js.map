{"version":3,"sources":["views/reports/ComplaintCreateView/Header.js","components/QuillEditor.js","components/FilesDropzone.js","views/reports/ComplaintCreateView/ComplaintCreateForm.js","views/reports/ComplaintCreateView/index.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","Grid","clsx","container","justify","spacing","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","theme","borderLeft","borderTop","borderRight","borderBottom","palette","divider","secondary","main","stroke","text","primary","padding","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","shape","fontFamily","typography","stepButton","marginLeft","QuillEditor","dropZone","outline","display","justifyContent","flexWrap","alignItems","action","hover","opacity","cursor","dragActive","active","image","width","info","marginTop","list","maxHeight","actions","FilesDropzone","editor","height","ComplaintCreateForm","useState","pictures","setPictures","enqueueSnackbar","useSnackbar","user","useSelector","state","account","onDrop","picture","concat","initialValues","description","images","validationSchema","Yup","max","subject","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","body","userid","_id","username","sensor","config","headers","axios","post","res","console","log","success","data","submit","response","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","xs","lg","Card","CardContent","TextField","error","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","Box","mt","mb","Paper","FormHelperText","CardHeader","title","Divider","alt","src","withIcon","buttonText","imgExtension","maxFileSize","Button","type","disabled","dark","minHeight","paddingTop","paddingBottom","ProductCreateView","Page","Container","maxWidth"],"mappings":"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","file":"static/js/35.63da04a3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Complaint\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Create a new complaint\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction QuillEditor({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <ReactQuill\n      className={clsx(classes.root, className)}\n      {...rest}\n    />\n  );\n}\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5\n  },\n  image: {\n    width: 130\n  },\n  info: {\n    marginTop: theme.spacing(1)\n  },\n  list: {\n    maxHeight: 320\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction FilesDropzone({ className, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const handleDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => [...prevFiles].concat(acceptedFiles));\n  }, []);\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n console.log(files);\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/static/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select files\n          </Typography>\n          <Box mt={2}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Drop files here or click\n              {' '}\n              <Link underline=\"always\">browse</Link>\n              {' '}\n              thorough your machine\n            </Typography>\n          </Box>\n        </div>\n      </div>\n      {files.length > 0 && (\n        <>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem\n                  divider={i < files.length - 1}\n                  key={i}\n                >\n                  <ListItemIcon>\n                    {/* <FileCopyIcon /> */}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary={bytesToSize(file.size)}\n                  />\n                  {/* <Tooltip title=\"More options\">\n                    <IconButton edge=\"end\">\n                      <MoreIcon />\n                    </IconButton>\n                  </Tooltip> */}\n                </ListItem>\n              ))}\n            </List>\n          </PerfectScrollbar>\n          <div className={classes.actions}>\n            <Button\n              onClick={handleRemoveAll}\n              size=\"small\"\n            >\n              Remove all\n            </Button>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Upload files\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport ImageUploader from 'react-images-upload';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport FilesDropzone from 'src/components/FilesDropzone';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  },\n  image: {\n    width: 130\n  }\n}));\n\nfunction ComplaintCreateForm({ className, ...rest }) {\n  const classes = useStyles();\n  const [pictures, setPictures] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n  const user = useSelector((state) => state.account.user);\n\n  const onDrop = (picture) => {\n    setPictures(pictures.concat(picture));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        description: '',\n        images: [],\n        // subject: '',\n        // sensor: user.userid,\n        // username: user.username,\n        // userid: user._id\n\n\n      }}\n      validationSchema={Yup.object().shape({\n        description: Yup.string().max(5000),\n        images: Yup.array(),\n        subject: Yup.string().max(255).required(),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        const body = {\n          subject: values.subject,\n          userid: user._id,\n          username: user.username,\n          sensor: user.userid,\n          description: values.description\n        };\n\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n\n        try {\n          const res = await axios.post('http://localhost:5000/admin/newComplaint', body, config);\n          console.log(res);\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(res.data, {\n            variant: 'success'\n          });\n        } catch (err) {\n          setErrors({ submit: err.response.data });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              xs={12}\n              lg={8}\n            >\n              <Card>\n                <CardContent>\n                  <TextField\n                    error={Boolean(touched.subject && errors.subject)}\n                    fullWidth\n                    helperText={touched.subject && errors.subject}\n                    label=\"Complaint Subject\"\n                    name=\"subject\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.subject}\n                    variant=\"outlined\"\n                  />\n                  <Box\n                    mt={3}\n                    mb={1}\n                  >\n                    <Typography\n                      variant=\"subtitle2\"\n                      color=\"textSecondary\"\n                    >\n                      Description\n                    </Typography>\n                  </Box>\n                  <Paper variant=\"outlined\">\n                    <QuillEditor\n                      className={classes.editor}\n                      value={values.description}\n                      onChange={(value) => setFieldValue('description', value)}\n                    />\n                  </Paper>\n                  {(touched.description && errors.description) && (\n                    <Box mt={2}>\n                      <FormHelperText error>\n                        {errors.description}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n              <Box mt={3}>\n                <Card>\n                  <CardHeader title=\"Upload Snapshots\" />\n                  <Divider />\n                  <CardContent>\n                    {/* <FilesDropzone /> */}\n\n                    <img\n                      alt=\"Select file\"\n                      className={\n                      classes.image\n                      }\n                      src=\"/static/images/undraw_add_file2_gvbb.svg\"\n                    />\n\n\n                    <ImageUploader\n                      withIcon={false}\n                      buttonText=\"Choose images\"\n                      onChange={onDrop}\n                      imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                      maxFileSize={5242880}\n                    />\n                  </CardContent>\n                </Card>\n              </Box>\n\n            </Grid>\n            {/* <Grid\n              item\n              xs={12}\n              lg={4}\n            >\n              <Card>\n                <CardHeader title=\"User\" />\n                <Divider />\n                <CardContent>\n                  <Box mt={2}>\n                    <TextField\n                      fullWidth\n                      label=\"Senosor\"\n                      name=\"sensor\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={user.userid}\n                      inputProps={\n                        { readOnly: true }\n                      }\n                      variant=\"outlined\"\n                    />\n                  </Box>\n\n                  <Box mt={2}>\n                    <TextField\n                      fullWidth\n                      label=\"User ID\"\n                      name=\"userid\"\n                      value={user._id}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      InputProps={\n                        {\n                          readOnly: true,\n                        }\n                      }\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                  <Box mt={2}>\n                    <TextField\n                      fullWidth\n                      label=\"User Name\"\n                      name=\"username\"\n                      value={user.username}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      InputProps={\n                        {\n                          readOnly: true\n                        }\n                      }\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid> */}\n          </Grid>\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit Complaint\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nComplaintCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ComplaintCreateForm;\n","import React from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport ComplaintCreateForm from './ComplaintCreateForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction ProductCreateView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Create Complaint\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <ComplaintCreateForm />\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProductCreateView;\n"],"sourceRoot":""}