{"version":3,"sources":["views/kanban/KanbanView/Header.js","components/StackAvatars.js","views/kanban/KanbanView/CardEditModal/Details.js","views/kanban/KanbanView/CardEditModal/CheckItem.js","views/kanban/KanbanView/CardEditModal/CheckItemAdd.js","views/kanban/KanbanView/CardEditModal/Checklist.js","views/kanban/KanbanView/CardEditModal/NewComment.js","views/kanban/KanbanView/CardEditModal/Comment.js","views/kanban/KanbanView/CardEditModal/ActionButton.js","views/kanban/KanbanView/CardEditModal/index.js","views/kanban/KanbanView/Card.js","views/kanban/KanbanView/CardAdd.js","views/kanban/KanbanView/List.js","views/kanban/KanbanView/ListAdd.js","views/kanban/KanbanView/index.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","theme","display","paddingLeft","avatar","border","palette","background","default","marginLeft","zIndex","more","backgroundColor","colors","red","common","white","StackAvatars","avatars","limit","lastIndex","avatarNodes","slice","map","item","Tooltip","key","title","Avatar","src","length","push","defaultProps","memo","Details","card","list","dispatch","useDispatch","enqueueSnackbar","useSnackbar","handleUpdate","_","debounce","update","a","updateCard","id","Box","mt","TextField","fullWidth","defaultValue","name","onChange","event","target","value","label","multiline","rows","description","placeholder","padding","spacing","alignItems","borderRadius","shape","dark","visibility","checkbox","marginRight","flexGrow","cursor","minHeight","deleteButton","CheckItem","checklist","checkItem","editing","onEditCancel","onEditInit","onEditComplete","useState","setName","handleStateChange","persist","state","checked","updateCheckItem","handleSave","handleDelete","deleteCheckItem","Checkbox","Button","size","onClick","IconButton","SvgIcon","CheckItemAdd","isExpanded","setExpanded","addCheckItem","listIcon","Checklist","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameSave","updateChecklist","deleteChecklist","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","completedCheckItems","filter","completePercentage","parseInt","ml","LinearProgress","checkItemId","field","NewComment","cardId","user","useSelector","account","message","setMessage","handleAdd","keyCode","addComment","alt","onKeyUp","marginBottom","Comment","comment","member","memberId","kanban","members","byId","selectMember","gutterBottom","Paper","mb","p","bgcolor","moment","createdAt","format","justifyContent","marginTop","icon","ActionButton","Icon","children","listName","fontWeight","typography","fontWeightMedium","CardEditModal","onClose","open","handleSubscribe","isSubscribed","handleUnsubscribe","deleteCard","handleAddChecklist","addChecklist","Dialog","maxWidth","Grid","container","xs","sm","checklists","comments","CheckIcon","UsersIcon","disabled","FileIcon","ArrowRightIcon","CopyIcon","LayoutIcon","EyeOffIcon","EyeIcon","Divider","ArchiveIcon","outline","paddingTop","paddingBottom","dragging","cover","height","badge","Card","forwardRef","ref","index","style","cards","memberIds","cardSelector","isOpened","setOpened","raised","position","CardMedia","image","CardContent","attachments","CardAdd","listId","handleAddConfirm","createCard","inner","flexDirection","maxHeight","overflowY","overflowX","width","breakpoints","down","droppableArea","paddingRight","menu","List","isMenuOpen","setMenuOpen","lists","selectList","moreRef","useRef","isRenaming","setRenaming","handleRenameInit","handleRename","updateList","deleteList","handleClear","clearList","py","px","ClickAwayListener","onClickAway","onBlur","margin","edge","droppableId","type","provided","innerRef","cardIds","draggableId","snapshot","isDragging","draggableProps","dragHandleProps","Menu","keepMounted","anchorEl","current","anchorOrigin","vertical","horizontal","PaperProps","getContentAnchorEl","MenuItem","ListAdd","createList","overflow","content","flexShrink","KanbanView","isLoaded","handleDragEnd","source","destination","moveCard","useEffect","getBoard","Page","onDragEnd","allIds"],"mappings":"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","file":"static/js/61.a9838f1c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app\"\n          component={RouterLink}\n        >\n          Dashboard\n        </Link>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          Kanban\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Board\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { updateCard } from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Details({\n  card,\n  className,\n  list,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleUpdate = _.debounce(async (update) => {\n    try {\n      await dispatch(updateCard(card.id, update));\n      enqueueSnackbar('Card updated', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  }, 1000);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          defaultValue={card.name}\n          onChange={(event) => handleUpdate({ name: event.target.value })}\n          label=\"Card Title\"\n        />\n      </Box>\n      <Box mt={3}>\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Description\n        </Typography>\n        <Box mt={2}>\n          <TextField\n            multiline\n            rows={6}\n            fullWidth\n            variant=\"outlined\"\n            onChange={(event) => handleUpdate({ description: event.target.value })}\n            placeholder=\"Leave a message\"\n            defaultValue={card.description}\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nDetails.propTypes = {\n  card: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  list: PropTypes.object.isRequired\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  IconButton,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Trash as TrashIcon } from 'react-feather';\nimport {\n  updateCheckItem,\n  deleteCheckItem\n} from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: theme.shape.borderRadius,\n    '&:hover': {\n      backgroundColor: theme.palette.background.dark,\n      '& $deleteButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  checkbox: {\n    marginLeft: theme.spacing(-1),\n    marginRight: theme.spacing(1)\n  },\n  name: {\n    flexGrow: 1,\n    cursor: 'pointer',\n    minHeight: 32\n  },\n  deleteButton: {\n    visibility: 'hidden'\n  }\n}));\n\nfunction CheckItem({\n  card,\n  checklist,\n  checkItem,\n  className,\n  editing,\n  onEditCancel,\n  onEditInit,\n  onEditComplete,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checkItem.name);\n\n  const handleStateChange = async (event) => {\n    try {\n      event.persist();\n\n      const state = event.target.checked ? 'complete' : 'incomplete';\n\n      await dispatch(updateCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id,\n        { state }\n      ));\n      enqueueSnackbar('Check item updated', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      await dispatch(updateCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id,\n        { name }\n      ));\n      onEditComplete();\n      enqueueSnackbar('Check item added', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setName(checkItem.name);\n    onEditCancel();\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCheckItem(\n        card.id,\n        checklist.id,\n        checkItem.id\n      ));\n      enqueueSnackbar('Check item added', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Checkbox\n        checked={checkItem.state === 'complete'}\n        onChange={handleStateChange}\n        className={classes.checkbox}\n      />\n      {editing ? (\n        <Box flexGrow={1}>\n          <TextField\n            value={name}\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <Box mt={1}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleSave}\n            >\n              Save\n            </Button>\n            <Button\n              size=\"small\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      ) : (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexGrow={1}\n        >\n          <Typography\n            onClick={onEditInit}\n            color=\"textPrimary\"\n            variant=\"body1\"\n            className={classes.name}\n          >\n            {checkItem.name}\n          </Typography>\n          <IconButton\n            onClick={handleDelete}\n            className={classes.deleteButton}\n          >\n            <SvgIcon fontSize=\"small\">\n              <TrashIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nCheckItem.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  checkItem: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  editing: PropTypes.bool,\n  onEditCancel: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  onEditInit: PropTypes.func\n};\n\nCheckItem.defaultProps = {\n  editing: false,\n  onEditCancel: () => {},\n  onEditComplete: () => {},\n  onEditInit: () => {}\n};\n\nexport default CheckItem;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  makeStyles,\n  TextField\n} from '@material-ui/core';\nimport { addCheckItem } from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CheckItemAdd({\n  card,\n  checklist,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState('');\n  const [isExpanded, setExpanded] = useState(false);\n\n  const handleAdd = () => {\n    setExpanded(true);\n  };\n\n  const handleCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!name) {\n        return;\n      }\n\n      await dispatch(addCheckItem(card.id, checklist.id, name));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('Check item added', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {isExpanded ? (\n        <div>\n          <TextField\n            fullWidth\n            onChange={handleChange}\n            placeholder=\"Add an item\"\n            value={name}\n            variant=\"outlined\"\n          />\n          <Box mt={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={handleSave}\n            >\n              Save\n            </Button>\n            <Button\n              size=\"small\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </div>\n      ) : (\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleAdd}\n        >\n          Add an item\n        </Button>\n      )}\n    </div>\n  );\n}\n\nCheckItemAdd.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nCheckItemAdd.defaultProps = {\n  className: ''\n};\n\nexport default CheckItemAdd;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  LinearProgress,\n  Typography,\n  TextField,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { List as ListIcon } from 'react-feather';\nimport {\n  updateChecklist,\n  deleteChecklist\n} from 'src/store/actions/kanbanActions';\nimport CheckItem from './CheckItem';\nimport CheckItemAdd from './CheckItemAdd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  listIcon: {\n    marginRight: theme.spacing(3)\n  }\n}));\n\nfunction Checklist({\n  card,\n  checklist,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checklist.name);\n  const [editingName, setEditingName] = useState(null);\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n  };\n\n  const handleNameChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleNameSave = async () => {\n    try {\n      if (!name || name === checklist.name) {\n        setEditingName(false);\n        setName(checklist.name);\n        return;\n      }\n\n      setEditingName(false);\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\n      enqueueSnackbar('Checklist updated', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameCancel = () => {\n    setEditingName(false);\n    setName(checklist.name);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteChecklist(card.id, checklist.id));\n      enqueueSnackbar('Checklist deleted', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCheckItemEditInit = (checkItemId) => {\n    setEditingCheckItem(checkItemId);\n  };\n\n  const handleCheckItemEditCancel = () => {\n    setEditingCheckItem(null);\n  };\n\n  const handleCheckItemEditComplete = () => {\n    setEditingCheckItem(null);\n  };\n\n  const totalCheckItems = checklist.checkItems.length;\n  const completedCheckItems = (checklist.checkItems.filter((checkItem) => checkItem.state === 'complete')).length;\n  const completePercentage = totalCheckItems === 0\n    ? 100\n    : (completedCheckItems / totalCheckItems) * 100;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.listIcon}\n        >\n          <ListIcon />\n        </SvgIcon>\n        {editingName ? (\n          <Box flexGrow={1}>\n            <TextField\n              value={name}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleNameChange}\n            />\n            <Box mt={1}>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleNameSave}\n              >\n                Save\n              </Button>\n              <Button\n                size=\"small\"\n                onClick={handleNameCancel}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexGrow={1}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n              onClick={handleNameEdit}\n            >\n              {checklist.name}\n            </Typography>\n            <Box flexGrow={1} />\n            <Button\n              size=\"small\"\n              onClick={handleDelete}\n            >\n              Delete\n            </Button>\n          </Box>\n        )}\n      </Box>\n      <Box\n        mt={1}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {parseInt(completePercentage, 10)}\n          %\n        </Typography>\n        <Box\n          ml={2}\n          flexGrow={1}\n        >\n          <LinearProgress\n            variant=\"determinate\"\n            value={completePercentage}\n            color=\"secondary\"\n          />\n        </Box>\n      </Box>\n      <Box mt={3}>\n        {checklist.checkItems.map((checkItem) => (\n          <CheckItem\n            editing={editingCheckItem === checkItem.id}\n            checkItem={checkItem}\n            card={card}\n            checklist={checklist}\n            key={checkItem.id}\n            onEditCancel={handleCheckItemEditCancel}\n            onEditComplete={handleCheckItemEditComplete}\n            onEditInit={() => handleCheckItemEditInit(checkItem.id)}\n          />\n        ))}\n      </Box>\n      <Box\n        mt={1}\n        ml={6}\n      >\n        <CheckItemAdd\n          card={card}\n          checklist={checklist}\n        />\n      </Box>\n    </div>\n  );\n}\n\nChecklist.propTypes = {\n  className: PropTypes.string,\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired\n};\n\nexport default Checklist;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { addComment } from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction NewComment({ cardId, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.account);\n  const { enqueueSnackbar } = useSnackbar();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  const handleAdd = async (event) => {\n    try {\n      event.persist();\n\n      if (event.keyCode === 13 && message) {\n        await dispatch(addComment(user.id, cardId, message));\n        setMessage('');\n        enqueueSnackbar('Comment added', {\n          variant: 'success'\n        });\n      }\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <TextField\n        fullWidth\n        className={classes.field}\n        value={message}\n        onKeyUp={handleAdd}\n        onChange={handleChange}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n\nNewComment.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default NewComment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nfunction selectMember(state, memberId) {\n  const { members, } = state.kanban;\n\n  return members.byId[memberId] || {};\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nfunction Comment({\n  comment,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const member = useSelector((state) => selectMember(state, comment.memberId));\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={member.avatar}\n      />\n      <Box\n        ml={2}\n        flexGrow={1}\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          {member.name}\n        </Typography>\n        <Paper\n          component={Box}\n          mb={1}\n          p={2}\n          bgcolor=\"background.dark\"\n          variant=\"outlined\"\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textPrimary\"\n          >\n            {comment.message}\n          </Typography>\n        </Paper>\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {moment(comment.createdAt).format('MMM DD, YYYY [at] hh:mm a')}\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ActionButton({\n  icon: Icon,\n  children,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.root}\n      fullWidth\n      variant=\"contained\"\n      size=\"small\"\n      {...rest}\n    >\n      {Icon && (\n        <SvgIcon\n          fontSize=\"small\"\n          className={classes.icon}\n        >\n          <Icon />\n        </SvgIcon>\n      )}\n      {children}\n    </Button>\n  );\n}\n\nActionButton.propTypes = {\n  icon: PropTypes.any,\n  children: PropTypes.any\n};\n\nexport default ActionButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Dialog,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles,\n  IconButton,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  XCircle as CloseIcon,\n  Eye as EyeIcon,\n  EyeOff as EyeOffIcon,\n  ArrowRight as ArrowRightIcon,\n  Archive as ArchiveIcon,\n  CheckSquare as CheckIcon,\n  Copy as CopyIcon,\n  Users as UsersIcon,\n  File as FileIcon,\n  Layout as LayoutIcon\n} from 'react-feather';\nimport {\n  deleteCard,\n  updateCard,\n  addChecklist\n} from 'src/store/actions/kanbanActions';\nimport Details from './Details';\nimport Checklist from './Checklist';\nimport NewComment from './NewComment';\nimport Comment from './Comment';\nimport ActionButton from './ActionButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  listName: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  checklist: {\n    '& + &': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}));\n\nfunction CardEditModal({\n  card,\n  className,\n  list,\n  onClose,\n  open,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: true }));\n      enqueueSnackbar('Unsubscribed', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleUnsubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: false }));\n      enqueueSnackbar('Subscribed', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCard(card.id));\n      enqueueSnackbar('Card archived', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleAddChecklist = async () => {\n    try {\n      await dispatch(addChecklist(card.id, 'Untitled Checklist'));\n      enqueueSnackbar('Checklist added', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      maxWidth=\"md\"\n      fullWidth\n      {...rest}\n    >\n      <div className={classes.root}>\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            in list\n            {' '}\n            <span className={classes.listName}>\n              {list.name}\n            </span>\n          </Typography>\n          <IconButton onClick={onClose}>\n            <SvgIcon>\n              <CloseIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Grid\n          container\n          spacing={5}\n        >\n          <Grid\n            item\n            xs={12}\n            sm={8}\n          >\n            <Details\n              card={card}\n              list={list}\n            />\n            {card.checklists.length > 0 && (\n              <Box mt={5}>\n                {card.checklists.map((checklist) => (\n                  <Checklist\n                    key={checklist.id}\n                    card={card}\n                    checklist={checklist}\n                    className={classes.checklist}\n                  />\n                ))}\n              </Box>\n            )}\n            <Box mt={3}>\n              <Typography\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                Activity\n              </Typography>\n              <Box mt={2}>\n                <NewComment cardId={card.id} />\n                {card.comments.length > 0 && (\n                  <Box mt={3}>\n                    {card.comments.map((comment) => (\n                      <Comment\n                        key={comment.id}\n                        comment={comment}\n                      />\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n          >\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              Add to card\n            </Typography>\n            <ActionButton\n              icon={CheckIcon}\n              onClick={handleAddChecklist}\n            >\n              Checklist\n            </ActionButton>\n            <ActionButton\n              icon={UsersIcon}\n              disabled\n            >\n              Members\n            </ActionButton>\n            <ActionButton\n              icon={UsersIcon}\n              disabled\n            >\n              Labels\n            </ActionButton>\n            <ActionButton\n              icon={FileIcon}\n              disabled\n            >\n              Attachments\n            </ActionButton>\n            <Box mt={3}>\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                Actions\n              </Typography>\n              <ActionButton\n                icon={ArrowRightIcon}\n                disabled\n              >\n                Move\n              </ActionButton>\n              <ActionButton\n                icon={CopyIcon}\n                disabled\n              >\n                Copy\n              </ActionButton>\n              <ActionButton\n                icon={LayoutIcon}\n                disabled\n              >\n                Make Template\n              </ActionButton>\n              {card.isSubscribed ? (\n                <ActionButton\n                  icon={EyeOffIcon}\n                  onClick={handleUnsubscribe}\n                >\n                  Unwatch\n                </ActionButton>\n              ) : (\n                <ActionButton\n                  icon={EyeIcon}\n                  onClick={handleSubscribe}\n                >\n                  Watch\n                </ActionButton>\n              )}\n              <Divider />\n              <ActionButton\n                icon={ArchiveIcon}\n                onClick={handleDelete}\n              >\n                Archive\n              </ActionButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    </Dialog>\n  );\n}\n\nCardEditModal.propTypes = {\n  card: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  list: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCardEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CardEditModal;\n","import React, { forwardRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card as MuiCard,\n  CardContent,\n  CardMedia,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  CheckSquare as CheckIcon,\n  Eye as EyeIcon,\n  File as FileIcon,\n  MessageCircle as MessageIcon\n} from 'react-feather';\nimport StackAvatars from 'src/components/StackAvatars';\nimport CardEditModal from './CardEditModal';\n\nfunction cardSelector(state, cardId) {\n  const { cards, members, } = state.kanban;\n  const card = cards.byId[cardId];\n\n  return {\n    ...card,\n    members: card.memberIds.map((memberId) => members.byId[memberId]),\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    outline: 'none',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  card: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.dark\n    }\n  },\n  dragging: {\n    backgroundColor: theme.palette.background.dark\n  },\n  cover: {\n    height: 200\n  },\n  badge: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst Card = forwardRef(({\n  cardId,\n  className,\n  dragging,\n  index,\n  list,\n  style,\n  ...rest\n}, ref) => {\n  const classes = useStyles();\n  const card = useSelector((state) => cardSelector(state, cardId));\n  const [isOpened, setOpened] = useState(false);\n\n  const handleOpen = () => {\n    setOpened(true);\n  };\n\n  const handleClose = () => {\n    setOpened(false);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      index={index}\n      ref={ref}\n      style={style}\n      {...rest}\n    >\n      <MuiCard\n        className={clsx(\n          classes.card,\n          { [classes.dragging]: dragging }\n        )}\n        raised={dragging}\n        variant={dragging ? 'elevation' : 'outlined'}\n        onClick={handleOpen}\n      >\n        {card.position}\n        {card.cover && (\n          <CardMedia\n            className={classes.cover}\n            image={card.cover}\n          />\n        )}\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            {card.name}\n          </Typography>\n          <Box\n            mt={2}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {card.isSubscribed > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <EyeIcon />\n              </SvgIcon>\n            )}\n            {card.attachments.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <FileIcon />\n              </SvgIcon>\n            )}\n            {card.checklists.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <CheckIcon />\n              </SvgIcon>\n            )}\n            {card.comments.length > 0 && (\n              <SvgIcon\n                className={classes.badge}\n                color=\"action\"\n                fontSize=\"small\"\n              >\n                <MessageIcon />\n              </SvgIcon>\n            )}\n            <Box flexGrow={1} />\n            {card.members.length > 0 && (\n              <StackAvatars\n                avatars={card.members.map((member) => member.avatar)}\n                limit={5}\n              />\n            )}\n          </Box>\n        </CardContent>\n      </MuiCard>\n      <CardEditModal\n        open={isOpened}\n        onClose={handleClose}\n        card={card}\n        list={list}\n      />\n    </div>\n  );\n});\n\nCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  dragging: PropTypes.bool,\n  index: PropTypes.number,\n  list: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\n\nCard.defaultProps = {\n  dragging: false,\n  style: {}\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { createCard } from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CardAdd({ className, listId, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createCard(listId, name || 'Untitled Card'));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('Card created', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {isExpanded ? (\n        <>\n          <TextField\n            fullWidth\n            label=\"Card Title\"\n            name=\"cardName\"\n            onChange={handleChange}\n            value={name}\n            variant=\"outlined\"\n          />\n          <Box\n            mt={2}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n          >\n            <Button\n              onClick={handleAddCancel}\n              variant=\"text\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddConfirm}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add\n            </Button>\n          </Box>\n        </>\n      ) : (\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Button onClick={handleAddInit}>\n            Add another card\n          </Button>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nCardAdd.propTypes = {\n  className: PropTypes.string,\n  listId: PropTypes.string.isRequired\n};\n\nCardAdd.defaultProps = {\n  className: ''\n};\n\nexport default CardAdd;\n","/* eslint-disable no-shadow */\nimport React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Droppable,\n  Draggable\n} from 'react-beautiful-dnd';\nimport {\n  Box,\n  ClickAwayListener,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { MoreVertical as MoreIcon } from 'react-feather';\nimport {\n  deleteList,\n  clearList,\n  updateList\n} from 'src/store/actions/kanbanActions';\nimport Card from './Card';\nimport CardAdd from './CardAdd';\n\nfunction selectList(state, listId) {\n  const { lists } = state.kanban;\n\n  return lists.byId[listId];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    overflowY: 'hidden',\n    overflowX: 'hidden',\n    width: 380,\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  },\n  title: {\n    cursor: 'pointer'\n  },\n  droppableArea: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  menu: {\n    width: 240\n  }\n}));\n\nfunction List({\n  className,\n  listId,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const list = useSelector((state) => selectList(state, listId));\n  const dispatch = useDispatch();\n  const moreRef = useRef(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(list.name);\n  const [isRenaming, setRenaming] = useState(false);\n\n  const handleMenuOpen = () => {\n    setMenuOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setMenuOpen(false);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleRenameInit = () => {\n    setRenaming(true);\n    setMenuOpen(false);\n  };\n\n  const handleRename = async () => {\n    try {\n      if (!name) {\n        setName(list.name);\n        setRenaming(false);\n        return;\n      }\n\n      const update = { name };\n\n      setRenaming(false);\n      await dispatch(updateList(list.id, update));\n      enqueueSnackbar('List updated', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      setMenuOpen(false);\n      await dispatch(deleteList(list.id));\n      enqueueSnackbar('List deleted', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleClear = async () => {\n    try {\n      setMenuOpen(false);\n      await dispatch(clearList(list.id));\n      enqueueSnackbar('List cleared', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Paper className={classes.inner}>\n        <Box\n          py={1}\n          px={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {isRenaming ? (\n            <ClickAwayListener onClickAway={handleRename}>\n              <TextField\n                value={name}\n                onBlur={handleRename}\n                onChange={handleChange}\n                variant=\"outlined\"\n                margin=\"dense\"\n              />\n            </ClickAwayListener>\n          ) : (\n            <Typography\n              color=\"inherit\"\n              variant=\"h5\"\n              className={classes.name}\n              onClick={handleRenameInit}\n            >\n              {list.name}\n            </Typography>\n          )}\n          <Box flexGrow={1} />\n          <IconButton\n            color=\"inherit\"\n            edge=\"end\"\n            variant=\"contained\"\n            onClick={handleMenuOpen}\n            ref={moreRef}\n          >\n            <SvgIcon fontSize=\"small\">\n              <MoreIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Divider />\n        <Droppable\n          droppableId={list.id}\n          type=\"card\"\n        >\n          {(provided) => (\n            <Box\n              minHeight={80}\n              ref={provided.innerRef}\n              className={classes.droppableArea}\n            >\n              {list.cardIds.map((cardId, index) => (\n                <Draggable\n                  draggableId={cardId}\n                  index={index}\n                  key={cardId}\n                >\n                  {(provided, snapshot) => (\n                    <Card\n                      cardId={cardId}\n                      dragging={snapshot.isDragging}\n                      index={index}\n                      key={cardId}\n                      list={list}\n                      ref={provided.innerRef}\n                      style={{ ...provided.draggableProps.style }}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    />\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n        <Divider />\n        <Box p={2}>\n          <CardAdd listId={list.id} />\n        </Box>\n        <Menu\n          keepMounted\n          anchorEl={moreRef.current}\n          open={isMenuOpen}\n          onClose={handleMenuClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n        >\n          <MenuItem onClick={handleRenameInit}>\n            Rename\n          </MenuItem>\n          <MenuItem onClick={handleClear}>\n            Clear\n          </MenuItem>\n          <MenuItem onClick={handleDelete}>\n            Delete\n          </MenuItem>\n        </Menu>\n      </Paper>\n    </div>\n  );\n}\n\nList.propTypes = {\n  className: PropTypes.string,\n  listId: PropTypes.string.isRequired\n};\n\nexport default List;\n","\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { createList } from 'src/store/actions/kanbanActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 380,\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  }\n}));\n\nfunction ListAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createList(name || 'Untitled list'));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('List created', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card className={classes.inner}>\n        <Box p={2}>\n          {isExpanded ? (\n            <>\n              <TextField\n                fullWidth\n                label=\"List Title\"\n                name=\"listName\"\n                onChange={handleChange}\n                value={name}\n                variant=\"outlined\"\n              />\n              <Box\n                mt={2}\n                display=\"flex\"\n                justifyContent=\"space-between\"\n              >\n                <Button\n                  onClick={handleAddCancel}\n                  variant=\"text\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleAddConfirm}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Add\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Button onClick={handleAddInit}>\n                Add another list\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    </div>\n  );\n}\n\nListAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ListAdd;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSnackbar } from 'notistack';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getBoard, moveCard } from 'src/store/actions/kanbanActions';\nimport Header from './Header';\nimport List from './List';\nimport ListAdd from './ListAdd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    flexShrink: 1,\n    display: 'flex',\n    overflowY: 'hidden',\n    overflowX: 'auto'\n  },\n  inner: {\n    display: 'flex',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  }\n}));\n\nfunction KanbanView() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { lists, isLoaded } = useSelector((state) => state.kanban);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n    // Dropped outside the list\n      if (!destination) {\n        return;\n      }\n\n      // Card has not been moved\n      if (source.droppableId === destination.droppableId\n        && source.index === destination.index\n      ) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n      // Moved to the same list on diferent position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n      // Moved to another list\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      enqueueSnackbar('Card moved', {\n        variant: 'success'\n      });\n    } catch (error) {\n      //\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Box p={3}>\n        <Header />\n      </Box>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className={classes.content}>\n          <div className={classes.inner}>\n            {lists.allIds.map((listId) => (\n              <List\n                className={classes.list}\n                key={listId}\n                listId={listId}\n              />\n            ))}\n            <ListAdd />\n          </div>\n        </div>\n      </DragDropContext>\n    </Page>\n  );\n}\n\nexport default KanbanView;\n"],"sourceRoot":""}