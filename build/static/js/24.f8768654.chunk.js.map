{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","views/social/ProfileView/Header.js","components/PostAdd.js","components/PostCard/Reactions.js","components/PostCard/Comment.js","components/PostCard/CommentAdd.js","components/PostCard/index.js","views/social/ProfileView/Timeline/About.js","views/social/ProfileView/Timeline/index.js","views/social/ProfileView/Connections.js","components/ProjectCard.js","views/social/ProfileView/Projects/index.js","views/social/ProfileView/Reviews/OverallReviews.js","views/social/ProfileView/Reviews/ReviewCard.js","views/social/ProfileView/Reviews/index.js","views/social/ProfileView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","cover","position","height","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","width","backgroundImage","visibility","changeButton","bottom","spacing","right","backgroundColor","colors","blueGrey","color","palette","common","white","breakpoints","down","addPhotoIcon","marginRight","avatar","border","action","marginLeft","Header","className","user","rest","classes","useState","connectedStatus","setConnectedStatus","handleConnectToggle","prevConnectedStatus","clsx","style","Button","variant","Container","maxWidth","Box","mt","display","alignItems","Avatar","alt","src","Typography","bio","flexGrow","Hidden","smDown","onClick","size","component","RouterLink","to","Tooltip","title","IconButton","divider","fileInput","PostAdd","fileInputRef","value","setValue","account","useSelector","state","handleAttach","click","Card","CardContent","Paper","py","px","Input","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","firstName","length","Divider","edge","ref","type","likedButton","red","Reactions","post","liked","setLiked","likes","setLikes","prevLikes","fontSize","marginBottom","bubble","borderRadius","shape","Comment","comment","author","p","ml","bgcolor","mb","Link","moment","createdAt","fromNow","message","CommentAdd","date","media","PostCard","openedFile","setOpenedFile","CardHeader","disableTypography","subheader","pb","CardActionArea","CardMedia","image","my","comments","key","id","large","onClose","jobAvatar","secondary","main","cityAvatar","About","LinearProgress","profileProgress","quote","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","currentJob","href","company","previousJob","primaryTypographyProps","currentCity","originCity","email","Timeline","isMountedRef","posts","setPosts","getPosts","useCallback","axios","get","then","response","data","Grid","container","item","xs","md","lg","connectStatusMap","not_connected","pending","connected","searchInput","Connections","enqueueSnackbar","useSnackbar","connections","setConnections","search","setSearch","getConnections","SvgIcon","filter","connection","toLowerCase","includes","mx","gutterBottom","status","prevConnections","_","clone","newConnection","background","dark","subscribersIcon","ProjectCard","project","isLiked","getInitials","updatedAt","description","justify","location","technology","pl","pr","subscribers","Rating","rating","readOnly","Projects","projects","setProjects","getProjects","lx","fontWeight","typography","fontWeightBold","OverallReviews","ratings","reduce","prev","total","ReviewCard","review","reviewer","flexWrap","mr","currency","price","pricePerHour","hours","marginTop","Reviews","reviews","setReviews","getReviews","tabs","label","minHeight","ProfileView","currentTab","setCurrentTab","setUser","Page","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/24.f8768654.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 460,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [connectedStatus, setConnectedStatus] = useState(user.connectedStatus);\n\n  const handleConnectToggle = () => {\n    setConnectedStatus((prevConnectedStatus) => (prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected'));\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${user.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n        >\n          <AddPhotoIcon className={classes.addPhotoIcon} />\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box\n          position=\"relative\"\n          mt={1}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Box marginLeft=\"160px\">\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {user.bio}\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {user.name}\n            </Typography>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            {connectedStatus === 'not_connected' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Connect\n              </Button>\n            )}\n            {connectedStatus === 'pending' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Pending\n              </Button>\n            )}\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/app/chat\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Send message\n            </Button>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton className={classes.action}>\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction PostAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n  const account = useSelector((state) => state.account);\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Paper\n            component={Box}\n            flexGrow={1}\n            py={0.5}\n            px={2}\n            variant=\"outlined\"\n          >\n            <Input\n              disableUnderline\n              fullWidth\n              onChange={handleChange}\n              placeholder={`What's on your mind, ${account.user.firstName}`}\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n          <Divider className={classes.divider} />\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n          <input\n            className={classes.fileInput}\n            ref={fileInputRef}\n            type=\"file\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nPostAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PostAdd;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  }\n}));\n\nfunction Reactions({ post, className, ...rest }) {\n  const classes = useStyles();\n  const [liked, setLiked] = useState(post.liked);\n  const [likes, setLikes] = useState(post.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {liked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton\n            className={classes.likedButton}\n            onClick={handleUnlike}\n          >\n            <FavoriteIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <FavoriteBorderIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography\n        color=\"textSecondary\"\n        variant=\"h6\"\n      >\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nfunction Comment({ comment, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"#\"\n      />\n      <Box\n        flexGrow={1}\n        p={2}\n        ml={2}\n        bgcolor=\"background.dark\"\n        className={classes.bubble}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mb={1}\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {comment.author.name}\n          </Link>\n          <Box flexGrow={1} />\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(comment.createdAt).fromNow()}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          {comment.message}\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  className: PropTypes.string,\n  comment: PropTypes.object.isRequired\n};\n\nexport default Comment;\n","import React, { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction CommentAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <Paper\n        variant=\"outlined\"\n        flexGrow={1}\n        component={Box}\n        ml={2}\n        py={0.5}\n        px={2}\n      >\n        <Input\n          disableUnderline\n          fullWidth\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n}\n\nCommentAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nfunction PostCard({ className, post, ...rest }) {\n  const classes = useStyles();\n  const [openedFile, setOpenedFile] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              className={classes.avatar}\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setOpenedFile(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {openedFile && (\n        <Lightbox\n          large={openedFile}\n          onClose={() => setOpenedFile(null)}\n        />\n      )}\n    </>\n  );\n}\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  LinearProgress,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Plus as PlusIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n  Briefcase as BriefcaseIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  jobAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  cityAvatar: {\n    backgroundColor: colors.red[600]\n  }\n}));\n\nfunction About({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader title=\"Profile Progress\" />\n        <Divider />\n        <CardContent>\n          <LinearProgress\n            variant=\"determinate\"\n            value={user.profileProgress}\n          />\n          <Box mt={2}>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              50% Set Up Complete\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n      <Box mt={3}>\n        <Card>\n          <CardHeader title=\"About\" />\n          <Divider />\n          <CardContent>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              &quot;\n              {user.quote}\n              &quot;\n            </Typography>\n            <List>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.jobAvatar}>\n                    <BriefcaseIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {user.currentJob.title}\n                      {' '}\n                      at\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Past:\n                      {user.previousJob.title}\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.previousJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <PlusIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Add school or collage\"\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <HomeIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      Lives in\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentCity}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Originally from\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.originCity}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <MailIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={user.email}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textPrimary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostAdd from 'src/components/PostAdd';\nimport PostCard from 'src/components/PostCard';\nimport About from './About';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Timeline({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState(null);\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/users/1/posts')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setPosts(response.data.posts);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={4}\n        >\n          <About user={user} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={8}\n        >\n          <PostAdd />\n          {posts && posts.map((post) => (\n            <Box\n              mt={3}\n              key={post.id}\n            >\n              <PostCard post={post} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nTimeline.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Timeline;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  Paper,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  Search as SearchIcon,\n  MoreVertical as MoreIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst connectStatusMap = {\n  not_connected: 'Connect',\n  pending: 'Pending',\n  connected: 'Connected'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nfunction Connections({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [connections, setConnections] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleConnectToggle = (id) => {\n    setConnections((prevConnections) => {\n      const newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map((connection) => {\n        if (connection.id === id) {\n          const newConnection = { ...connection };\n\n          newConnection.status = connection.status === 'connected' || connection.status === 'pending'\n            ? 'not_connected'\n            : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  const getConnections = useCallback(() => {\n    axios\n      .get('/api/social/users/1/connections')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setConnections(response.data.connections);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  if (!connections) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n        >\n          <SearchIcon />\n        </SvgIcon>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n          placeholder=\"Search connections\"\n        />\n      </Box>\n      <Divider />\n      <Box p={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {connections\n            .filter((connection) => connection.name.toLowerCase().includes(search))\n            .map((connection) => (\n              <Grid\n                item\n                key={connection.id}\n                xs={12}\n                md={6}\n              >\n                <Paper variant=\"outlined\">\n                  <Box\n                    p={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <Avatar\n                      alt=\"Profile image\"\n                      className={classes.avatar}\n                      component={RouterLink}\n                      src={connection.avatar}\n                      to=\"#\"\n                    />\n                    <Box\n                      flexGrow={1}\n                      mx={2}\n                    >\n                      <Link\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        {connection.common}\n                        {' '}\n                        connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <SvgIcon fontSize=\"small\">\n                        <MoreIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Connections;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/projects')\n        .then((response) => setProjects(response.data.projects));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            lg={4}\n            lx={4}\n            md={6}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction OverallReviews({ ratings, className, ...rest }) {\n  const classes = useStyles();\n  let rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce((prev, current) => prev + current, 0) / ratings.length;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Overall Reviews\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Rating value={rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                {rating}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography\n              className={classes.total}\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {ratings.length}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\n\nexport default OverallReviews;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction ReviewCard({ review, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Reviewer\"\n            className={classes.avatar}\n            src={review.reviewer.avatar}\n          >\n            {getInitials(review.reviewer.name)}\n          </Avatar>\n        )}\n        disableTypography\n        subheader={(\n          <Box\n            flexWrap=\"wrap\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              mr={1}\n            >\n              <Rating value={review.rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n              >\n                {review.rating}\n              </Typography>\n            </Box>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              | Reviewd by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {review.reviewer.name}\n              </Link>\n              {' '}\n              |\n              {' '}\n              {moment(review.createdAt).fromNow()}\n            </Typography>\n          </Box>\n        )}\n        title={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h5\"\n          >\n            {review.project.title}\n          </Link>\n        )}\n      />\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {review.message}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.project.price}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Project price\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.pricePerHour}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Per project\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.hours}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Hours\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nReviewCard.propTypes = {\n  className: PropTypes.string,\n  review: PropTypes.object.isRequired\n};\n\nexport default ReviewCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport OverallReviews from './OverallReviews';\nimport ReviewCard from './ReviewCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  review: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Reviews({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [reviews, setReviews] = useState(null);\n\n  const getReviews = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/reviews')\n        .then((response) => setReviews(response.data.reviews));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <OverallReviews ratings={reviews.map((review) => review.rating)} />\n      {reviews.map((review) => (\n        <ReviewCard\n          className={classes.review}\n          key={review.id}\n          review={review}\n        />\n      ))}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Reviews;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Timeline from './Timeline';\nimport Connections from './Connections';\nimport Projects from './Projects';\nimport Reviews from './Reviews';\n\nconst tabs = [\n  { value: 'timeline', label: 'Timeline' },\n  { value: 'connections', label: 'Connections' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'reviews', label: 'Reviews' }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nfunction ProfileView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('timeline');\n  const [user, setUser] = useState(null);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/profile')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setUser(response.data.user);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Header user={user} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box\n          py={3}\n          pb={6}\n        >\n          {currentTab === 'timeline' && <Timeline user={user} />}\n          {currentTab === 'connections' && <Connections />}\n          {currentTab === 'projects' && <Projects />}\n          {currentTab === 'reviews' && <Reviews />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProfileView;\n"],"sourceRoot":""}