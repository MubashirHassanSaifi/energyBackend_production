{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","utils/wait.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","views/extra/forms/FormikView/BasicForm.js","views/extra/forms/FormikView/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","wait","time","Promise","res","setTimeout","createSvgIcon","React","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","props","ref","action","children","classes","className","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","concat","capitalize","message","IconButton","size","title","onClick","withStyles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","name","BasicForm","useState","isAlertVisible","setAlertVisible","initialValues","email","firstName","lastName","password","policy","validationSchema","Yup","required","min","max","oneOf","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardHeader","Divider","CardContent","Box","mb","justifyContent","my","CircularProgress","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","mt","ml","Checkbox","checked","Typography","Link","component","href","FormHelperText","Button","disabled","useStyles","makeStyles","background","dark","minHeight","paddingTop","paddingBottom","FormikView","Page","Container","maxWidth","Breadcrumbs","separator","aria-label","to","RouterLink"],"mappings":"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","file":"static/js/21.a44f5a3b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'johnnydoe@yahoo.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        password: 'thisisasecuredpassword',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        firstName: Yup.string().required('Required'),\n        lastName: Yup.string().required('Required'),\n        password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(1000);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <Card>\n          <CardHeader title=\"Basic Form\" />\n          <Divider />\n          <CardContent>\n            {isAlertVisible && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setAlertVisible(false)}\n                  severity=\"info\"\n                >\n                  This is an info alert - check it out!\n                </Alert>\n              </Box>\n            )}\n            {isSubmitting ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                my={5}\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      fullWidth\n                      helperText={touched.firstName && errors.firstName}\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      fullWidth\n                      helperText={touched.lastName && errors.lastName}\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  mt={2}\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      component=\"a\"\n                      href=\"#\"\n                      color=\"secondary\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                <FormHelperText error>\n                  {errors.policy}\n                </FormHelperText>\n                )}\n                <Box mt={2}>\n                  <Button\n                    color=\"secondary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Formik>\n  );\n}\n\nexport default BasicForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Breadcrumbs,\n  Container,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Page from 'src/components/Page';\nimport BasicForm from './BasicForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction FormikView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Formik Form\"\n    >\n      <Container maxWidth=\"lg\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Forms\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Formik\n        </Typography>\n        <Box mt={3}>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              md={6}\n            >\n              <BasicForm />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default FormikView;\n"],"sourceRoot":""}