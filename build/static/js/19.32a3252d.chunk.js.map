{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","utils/getInitials.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/icons/GetApp.js","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/PictureAsPdf.js","../node_modules/@material-ui/icons/ArchiveOutlined.js","components/GenericMoreButton.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/Meters/VoltageMeters/voltagemeterA.js","views/reports/DashboardAlternativeView/Meters/VoltageMeters/voltageMeterB.js","views/reports/DashboardAlternativeView/Meters/VoltageMeters/voltageMeterC.js","views/reports/DashboardAlternativeView/Meters/CurrentMeters/currentMeter.js","views/reports/DashboardAlternativeView/Meters/CurrentMeters/currentMeterB.js","views/reports/DashboardAlternativeView/Meters/CurrentMeters/currentMeterC.js","views/reports/DashboardAlternativeView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","name","replace","split","slice","map","v","toUpperCase","join","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","Tooltip","title","IconButton","onClick","ref","Menu","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","MenuItem","ListItemIcon","ListItemText","item","borderRight","divider","textAlign","flexDirection","position","chart","FinancialStats","timeRanges","text","actionIcon","marginRight","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","SvgIcon","getContentAnchorEl","t","key","navigateNextIcon","marginLeft","LatestOrders","circle1","stroke","type","fill","strokeWidth","circle2","animation","strokeDasharray","image","subscriptions","colors","green","MostProfitableProducts","breakpoints","up","down","borderBottom","valueContainer","label","Overview","overview","Card","md","sm","xs","gutterBottom","avatar","fontWeightBold","common","white","TopReferrals","ReactFC","fcRoot","FusionCharts","charts","FusionTheme","VoltageMeterA","minvalue","maxvalue","code","Status","energy","useSelector","state","VupperLmt","f","V_upperLmt","VlowerLmt","V_lowerLmt","Va","dataSource","caption","captionfontsize","captionontop","origw","origh","gaugestartangle","gaugeendangle","gaugeoriginx","gaugeoriginy","gaugeouterradius","showvalue","numbersuffix","valuefontsize","colorrange","dials","dial","tooltext","CardHeader","Divider","Box","p","minHeight","dataFormat","VoltageMeterB","Vb","VoltageMeterC","Vc","CurrentMeter","I_upperLmt","Ia","captionpadding","majortmnumber","majortmthickness","majortmheight","minortmheight","minortmthickness","minortmnumber","showgaugeborder","bgcolor","basewidth","annotations","groups","items","id","x","y","fontsize","Ib","Ic","background","dark","paddingTop","paddingBottom","paddingLeft","paddingRight","DashboardAlternativeView","Page","Container","lg"],"mappings":"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","file":"static/js/19.32a3252d.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.81.97H5.44l.8-.97zM5 19V8h14v11H5zm8.45-9h-2.9v3H8l4 4 4-4h-2.55z\"\n}), 'ArchiveOutlined');\n\nexports.default = _default;","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CustomerActivity({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState(null);\n\n  const getActivities = useCallback(() => {\n    axios\n      .get('/api/reports/customer-activity')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setActivities(response.data.activities);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  if (!activities) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Customer Activity\"\n        action={<GenericMoreButton />}\n      />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem\n            divider={i < activities.length - 1}\n            key={activity.id}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={(\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              )}\n              secondary={(\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {activity.description}\n                </Typography>\n              )}\n            />\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(() => {\n    axios\n      .get('/api/reports/earnings')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Financial Stats\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={700}\n          pt={4}\n          pr={2}\n          pl={2}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst labelColors = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestOrders({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState(null);\n\n  const getOrders = useCallback(() => {\n    axios\n      .get('/api/reports/latest-orders')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrders(response.data.orders);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  if (!orders) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Order ID\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Items\n                </TableCell>\n                <TableCell>\n                  Total\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>{order.ref}</TableCell>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items}</TableCell>\n                  <TableCell>\n                    {order.currency}\n                    {order.value}\n                  </TableCell>\n                  <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/management/orders\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nfunction CircularProgress({ value, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MostProfitableProducts({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState(null);\n\n  const getProducts = useCallback(() => {\n    axios\n      .get('/api/reports/profitable-products')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProducts(response.data.products);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {product.subscriptions}\n                          </span>\n                          {' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      Price\n                    </Typography>\n                    <Typography\n                      noWrap\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.value}>\n                        {product.currency}\n                        {product.price}\n                      </span>\n                      {' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.progress}\n                          %\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.progress} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Overview({ className, ...rest }) {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.income}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.expanses}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.profit}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"error\"\n            >\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nfunction TopReferrals({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState(null);\n\n  const getReferrals = useCallback(() => {\n    axios\n      .get('/api/reports/top-referrals')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setReferrals(response.data.referrals);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                size=\"small\"\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {referral.value}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction VoltageMeterA({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const VupperLmt = energy.map((f) => f.V_upperLmt);\n  const VlowerLmt = energy.map((f) => f.V_lowerLmt);\n  const Va = energy.map((f) => f.Va);\n  let minvalue;\n  let maxvalue;\n  let code;\n  let Status;\n\n  if (Va[0] < VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#B22222';\n    Status = ' Below from his lowerlimit';\n  } else if (Va[0] > VupperLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#FF8C00';\n    Status = 'Exceeding above from his upperlimit';\n  } else if (Va[0] <= VupperLmt[0] && Va[0] >= VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#FFC533';\n    Status = 'Status : OK';\n  }\n  const dataSource = {\n    chart: {\n      caption: ` ${Status}`,\n      captionfontsize: 12,\n      captionontop: '0',\n      origw: '400',\n      origh: '200',\n      gaugestartangle: '135',\n      gaugeendangle: '45',\n      gaugeoriginx: '200',\n      gaugeoriginy: '240',\n      gaugeouterradius: '190',\n      theme: 'candy',\n      showvalue: '1',\n      numbersuffix: 'V',\n      valuefontsize: '15'\n    },\n    colorrange: {\n      color: [\n\n\n        {\n\n          minvalue,\n          maxvalue,\n          code\n        },\n\n        // {\n        //   minvalue: '241',\n        //   maxvalue: '1000',\n        //   code: '#F2726F'\n        // }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Va,\n          tooltext: 'Voltages phase-A'\n        }\n      ]\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={<GenericMoreButton />}\n        title=\"VOLTAGES  (Phase-A)\"\n      />\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n\n        />\n      </Box>\n      <Divider />\n      {/* <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box> */}\n    </Card>\n  );\n}\n\nVoltageMeterA.propTypes = {\n  className: PropTypes.string\n};\n\nexport default VoltageMeterA;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction VoltageMeterB({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const VupperLmt = energy.map((f) => f.V_upperLmt);\n  const VlowerLmt = energy.map((f) => f.V_lowerLmt);\n  const Vb = energy.map((f) => f.Vb);\n  let minvalue;\n  let maxvalue;\n  let code;\n  let Status;\n\n  if (Vb[0] < VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#B22222';\n    Status = 'Below from his lowerlimit';\n  } else if (Vb[0] > VupperLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#FF8C00';\n    Status = 'Exceeding above from his upperlimit';\n  } else if (Vb[0] <= VupperLmt[0] && Vb[0] >= VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#FFC533';\n    Status = 'Status : OK';\n  }\n\n  const dataSource = {\n    chart: {\n      caption: ` ${Status} `,\n      captionfontsize: 12,\n      captionontop: '0',\n      origw: '400',\n      origh: '200',\n      gaugestartangle: '135',\n      gaugeendangle: '45',\n      gaugeoriginx: '200',\n      gaugeoriginy: '240',\n      gaugeouterradius: '190',\n      theme: 'candy',\n      showvalue: '1',\n      numbersuffix: 'V',\n      valuefontsize: '15'\n    },\n    colorrange: {\n      color: [\n\n\n        {\n\n          minvalue,\n          maxvalue,\n          code\n        }\n        // {\n        //   minvalue: V_lowerLmt[0],\n        //   maxvalue: V_upperLmt[0],\n        //   code: '#62B58F'\n        // },\n        // {\n        //   minvalue: V_upperLmt[0],\n        //   maxvalue: V_upperLmt[0] + 10,\n        //   code: '#F2726F'\n        // }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Vb,\n          tooltext: 'Voltages phase-B'\n        }\n      ]\n    }\n  };\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={<GenericMoreButton />}\n        title=\"VOLTAGES  (Phase-B)\"\n      />\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n\n        />\n      </Box>\n      <Divider />\n    </Card>\n  );\n}\n\nVoltageMeterB.propTypes = {\n  className: PropTypes.string\n};\n\nexport default VoltageMeterB;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n\n}));\n\nfunction VoltageMeterC({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const VupperLmt = energy.map((f) => f.V_upperLmt);\n  const VlowerLmt = energy.map((f) => f.V_lowerLmt);\n  const Vc = energy.map((f) => f.Vc);\n  let minvalue;\n  let maxvalue;\n  let code;\n  let Status;\n\n  if (Vc[0] < VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#B22222';\n    Status = 'Below from his lowerlimit';\n  } else if (Vc[0] > VupperLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = 'FF8C00';\n    Status = 'Exceeding above from his upperlimit';\n  } else if (Vc[0] <= VupperLmt[0] && Vc[0] >= VlowerLmt[0]) {\n    minvalue = VlowerLmt[0];\n    maxvalue = VupperLmt[0];\n    code = '#FFC533';\n    Status = 'Status : OK';\n  }\n\n  const dataSource = {\n    chart: {\n      caption: ` ${Status} `,\n      captionfontsize: 12,\n      captionontop: '0',\n      origw: '400',\n      origh: '200',\n      gaugestartangle: '135',\n      gaugeendangle: '45',\n      gaugeoriginx: '200',\n      gaugeoriginy: '240',\n      gaugeouterradius: '190',\n      theme: 'candy',\n      showvalue: '1',\n      numbersuffix: 'V',\n      valuefontsize: '20'\n    },\n    colorrange: {\n      color: [\n\n\n        {\n\n          minvalue,\n          maxvalue,\n          code\n        }\n        // {\n        //   minvalue: '190',\n        //   maxvalue: '240',\n        //   code: '#FFC533'\n        // },\n        // {\n        //   minvalue: '241',\n        //   maxvalue: '1000',\n        //   code: '#F2726F'\n        // }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Vc,\n          tooltext: 'Voltages phase-C'\n        }\n      ]\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n\n      <CardHeader\n          // action={<GenericMoreButton />}\n        title=\"VOLTAGES  (Phase-C)\"\n\n      />\n\n\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n        />\n      </Box>\n      <Divider />\n\n    </Card>\n  );\n}\n\nVoltageMeterC.propTypes = {\n  className: PropTypes.string\n};\n\nexport default VoltageMeterC;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\n// import axios from 'src/utils/axios';\n// import useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CurrentMeter({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const I_upperLmt = energy.map((f) => f.I_upperLmt);\n  const Ia = energy.map((f) => f.Ia);\n  const dataSource = {\n    chart: {\n      captionpadding: '0',\n      origw: '320',\n      origh: '300',\n      gaugeouterradius: '115',\n      gaugestartangle: '270',\n      gaugeendangle: '-25',\n      showvalue: '1',\n      valuefontsize: '30',\n      majortmnumber: '13',\n      majortmthickness: '2',\n      majortmheight: '13',\n      minortmheight: '7',\n      minortmthickness: '1',\n      minortmnumber: '1',\n      showgaugeborder: '0',\n      theme: 'candy'\n    },\n    colorrange: {\n      color: [\n        {\n          minvalue: 0,\n          maxvalue: Ia[0],\n          code: '#999999'\n        },\n        {\n          minvalue: 0,\n          maxvalue: I_upperLmt[0],\n          code: '#F6F6F6'\n        }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Ia[0],\n          bgcolor: '#F20F2F',\n          basewidth: '30'\n        }\n      ]\n    },\n    annotations: {\n      groups: [\n        {\n          items: [\n            {\n              type: 'text',\n              id: 'text',\n              text: 'Ampere',\n              x: '$gaugeCenterX',\n              y: '$gaugeCenterY + 55',\n              fontsize: '15',\n              color: '#555555'\n            }\n          ]\n        }\n      ]\n    }\n  };\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n          // action={<GenericMoreButton />}\n        title=\"Current  Phase-A\"\n      />\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n\n        />\n      </Box>\n      <Divider />\n\n    </Card>\n  );\n}\n\nCurrentMeter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CurrentMeter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\n// import axios from 'src/utils/axios';\n// import useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CurrentMeter({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const I_upperLmt = energy.map((f) => f.I_upperLmt);\n  const Ib = energy.map((f) => f.Ib);\n  const dataSource = {\n    chart: {\n      captionpadding: '0',\n      origw: '320',\n      origh: '300',\n      gaugeouterradius: '115',\n      gaugestartangle: '270',\n      gaugeendangle: '-25',\n      showvalue: '1',\n      valuefontsize: '30',\n      majortmnumber: '13',\n      majortmthickness: '2',\n      majortmheight: '13',\n      minortmheight: '7',\n      minortmthickness: '1',\n      minortmnumber: '1',\n      showgaugeborder: '0',\n      theme: 'candy'\n    },\n    colorrange: {\n      color: [\n        {\n          minvalue: 0,\n          maxvalue: Ib[0],\n          code: '#999999'\n        },\n        {\n          minvalue: 0,\n          maxvalue: I_upperLmt[0],\n          code: '#F6F6F6'\n        }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Ib[0],\n          bgcolor: '#F20F2F',\n          basewidth: '30'\n        }\n      ]\n    },\n    annotations: {\n      groups: [\n        {\n          items: [\n            {\n              type: 'text',\n              id: 'text',\n              text: 'Ampere',\n              x: '$gaugeCenterX',\n              y: '$gaugeCenterY + 55',\n              fontsize: '15',\n              color: '#555555'\n            }\n          ]\n        }\n      ]\n    }\n  };\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n              // action={<GenericMoreButton />}\n        title=\"Current  Phase-B\"\n      />\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n        />\n      </Box>\n      <Divider />\n\n    </Card>\n  );\n}\n\nCurrentMeter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CurrentMeter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import GenericMoreButton from 'src/components/GenericMoreButton';\n// import axios from 'src/utils/axios';\n// import useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ReactFC from 'react-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport charts from 'fusioncharts/fusioncharts.widgets';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n\nReactFC.fcRoot(FusionCharts, charts, FusionTheme);\n\n\n// ////////////////////////////////////////////////////////////////\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CurrentMeter({ className, ...rest }) {\n  const classes = useStyles();\n  const energy = useSelector((state) => state.energy.energy);\n  const I_upperLmt = energy.map((f) => f.I_upperLmt);\n  const Ic = energy.map((f) => f.Ic);\n  const dataSource = {\n    chart: {\n      captionpadding: '0',\n      origw: '320',\n      origh: '300',\n      gaugeouterradius: '115',\n      gaugestartangle: '270',\n      gaugeendangle: '-25',\n      showvalue: '1',\n      valuefontsize: '30',\n      majortmnumber: '13',\n      majortmthickness: '2',\n      majortmheight: '13',\n      minortmheight: '7',\n      minortmthickness: '1',\n      minortmnumber: '1',\n      showgaugeborder: '0',\n      theme: 'candy'\n    },\n    colorrange: {\n      color: [\n        {\n          minvalue: 0,\n          maxvalue: Ic[0],\n          code: '#999999'\n        },\n        {\n          minvalue: 0,\n          maxvalue: I_upperLmt[0],\n          code: '#F6F6F6'\n        }\n      ]\n    },\n    dials: {\n      dial: [\n        {\n          value: Ic[0],\n          bgcolor: '#F20F2F',\n          basewidth: '30'\n        }\n      ]\n    },\n    annotations: {\n      groups: [\n        {\n          items: [\n            {\n              type: 'text',\n              id: 'text',\n              text: 'Ampere',\n              x: '$gaugeCenterX',\n              y: '$gaugeCenterY + 55',\n              fontsize: '15',\n              color: '#555555'\n            }\n          ]\n        }\n      ]\n    }\n  };\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n            // action={<GenericMoreButton />}\n        title=\"Current  Phase-C\"\n      />\n      <Divider />\n      <Box\n        p={1}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <ReactFC\n          type=\"angulargauge\"\n          width=\"100%\"\n          height=\"100%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n\n        />\n      </Box>\n      <Divider />\n\n    </Card>\n  );\n}\n\nCurrentMeter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CurrentMeter;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\nimport VoltMeter from './Meters/VoltageMeters/voltagemeterA';\nimport VoltMeterB from './Meters/VoltageMeters/voltageMeterB';\nimport VoltMeterC from './Meters/VoltageMeters/voltageMeterC';\nimport CurrentMeter from './Meters/CurrentMeters/currentMeter';\nimport CurrentMeterB from './Meters/CurrentMeters/currentMeterB';\nimport CurrentMeterC from './Meters/CurrentMeters/currentMeterC';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction DashboardAlternativeView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard Alternative\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <Overview />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <VoltMeter />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <VoltMeterB />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <VoltMeterC />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CurrentMeter />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CurrentMeterB />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CurrentMeterC />\n          </Grid>\n          {/* <Grid\n            item\n            lg={8}\n            xl={9}\n            xs={12}\n          >\n            <FinancialStats />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xl={3}\n            xs={12}\n          >\n            <EarningsSegmentation />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CustomerActivity />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <MostProfitableProducts />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <TopReferrals />\n          </Grid> */}\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}