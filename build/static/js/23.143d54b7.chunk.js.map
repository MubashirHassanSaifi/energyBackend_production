{"version":3,"sources":["utils/getInitials.js","components/QuillEditor.js","views/mail/MailView/Sidebar/LabelItem.js","views/mail/MailView/Sidebar/index.js","views/mail/MailView/MailList/Toolbar.js","views/mail/MailView/MailList/MailItem.js","views/mail/MailView/MailList/index.js","views/mail/MailView/MailDetails/Toolbar.js","views/mail/MailView/MailDetails/MailReply.js","views/mail/MailView/MailDetails/index.js","views/mail/MailView/MailNew.js","views/mail/MailView/index.js"],"names":["name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","borderLeft","borderTop","borderRight","borderBottom","palette","divider","color","secondary","main","stroke","text","primary","padding","spacing","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","shape","fontFamily","typography","fontSize","stepButton","marginLeft","QuillEditor","className","rest","classes","clsx","systemLabelIcons","all","MailIcon","inbox","InboxIcon","trash","DeleteIcon","drafts","DraftsIcon","spam","ReportIcon","sent","SendIcon","starred","StarIcon","important","LabelImportantIcon","content","flexGrow","height","borderTopRightRadius","borderBottomRightRadius","paddingRight","paddingLeft","fontWeight","fontWeightRegular","action","hover","active","fontWeightMedium","selected","label","labelRoot","display","alignItems","icon","marginRight","LabelItem","Icon","type","id","LabelIcon","getIcon","to","getTo","getColor","displayUnreadCount","Boolean","unreadCount","ListItem","ButtonBase","activeClassName","component","RouterLink","style","Typography","variant","drawerDesktopRoot","width","flexShrink","drawerDesktopPaper","position","drawerMobilePaper","drawerMobileBackdrop","Sidebar","containerRef","dispatch","useDispatch","location","useLocation","useSelector","state","mail","labels","sidebarOpen","useEffect","closeSidebar","pathname","Box","px","py","Button","fullWidth","onClick","openNewMessage","Divider","pr","List","key","Hidden","smDown","Drawer","paper","mdUp","open","onClose","zIndex","BackdropProps","ModalProps","container","current","searchInput","Toolbar","mails","onDeselectAll","onSelectAll","selectedMails","selectedAllMails","selectedSomeMails","IconButton","openSidebar","SvgIcon","Checkbox","checked","checkbox","indeterminate","onChange","event","target","Paper","Input","disableUnderline","placeholder","Tooltip","title","noWrap","defualtProps","unread","left","top","error","fontWeightBold","filterActive","colors","amber","cursor","textDecoration","details","breakpoints","up","minWidth","flexBasis","subject","maxWidth","whiteSpace","overflow","textOverflow","message","pxToRem","common","white","paddingTop","paddingBottom","date","MailItem","onDeselect","onSelect","params","useParams","mailId","systemLabel","customLabel","isUnread","mr","isStarred","isImportant","Avatar","src","from","avatar","getInitials","ml","labelIds","length","mx","labelId","find","_label","moment","createdAt","format","dark","MailList","useState","setSelectedMails","getMails","allIds","byId","prevSelectedMails","filter","handleDeselectOneMail","includes","handleSelectOneMail","history","useHistory","push","mdDown","textarea","body1","outline","resize","fileInput","MailReply","user","account","fileInputRef","useRef","value","setValue","handleAttach","click","alt","TextareaAutosize","persist","rows","mt","size","ref","flexDirection","overflowY","marginBottom","MailDetails","getMail","p","justifyContent","Link","email","person","bgcolor","source","maxHeight","bottom","right","margin","minHeight","fullScreen","input","editor","MailNew","newMessageOpen","setFullScreen","messageBody","setMessageBody","Portal","Backdrop","elevation","closeNewMessage","MailView","pageRef","getLabels","Page"],"mappings":"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","file":"static/js/23.143d54b7.chunk.js","sourcesContent":["export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction QuillEditor({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <ReactQuill\n      className={clsx(classes.root, className)}\n      {...rest}\n    />\n  );\n}\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ButtonBase,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ReportIcon from '@material-ui/icons/Report';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\n\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: DeleteIcon,\n  drafts: DraftsIcon,\n  spam: ReportIcon,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nfunction getIcon(label) {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n}\n\nfunction getTo(label) {\n  const baseUrl = '/app/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n}\n\nfunction getColor(label) {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 0\n  },\n  content: {\n    flexGrow: 1,\n    height: 36,\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: 18,\n    borderBottomRightRadius: 18,\n    paddingRight: 18,\n    paddingLeft: 32,\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  active: {\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.action.selected\n  },\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit'\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1, 0)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  text: {\n    fontWeight: 'inherit',\n    flexGrow: 1\n  }\n}));\n\nfunction LabelItem({ label, ...rest }) {\n  const classes = useStyles();\n\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(label.unreadCount && label.unreadCount > 0);\n\n  return (\n    <ListItem\n      className={classes.root}\n      {...rest}\n    >\n      <ButtonBase\n        activeClassName={classes.active}\n        component={RouterLink}\n        to={to}\n        className={classes.content}\n      >\n        <Icon\n          className={classes.icon}\n          color=\"inherit\"\n          style={{ color }}\n        />\n        <Typography\n          className={classes.text}\n          variant=\"body2\"\n        >\n          {label.name}\n        </Typography>\n        {displayUnreadCount && (\n          <Typography\n            color=\"inherit\"\n            variant=\"caption\"\n          >\n            {label.unreadCount}\n          </Typography>\n        )}\n      </ButtonBase>\n    </ListItem>\n  );\n}\n\nLabelItem.propTypes = {\n  label: PropTypes.object.isRequired,\n  children: PropTypes.any\n};\n\nexport default LabelItem;\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Drawer,\n  Hidden,\n  Box,\n  List,\n  Button,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { closeSidebar, openNewMessage } from 'src/store/actions/mailActions';\nimport LabelItem from './LabelItem';\n\nconst useStyles = makeStyles(() => ({\n  drawerDesktopRoot: {\n    width: 280,\n    flexShrink: 0\n  },\n  drawerDesktopPaper: {\n    position: 'relative'\n  },\n  drawerMobilePaper: {\n    position: 'relative',\n    width: 280\n  },\n  drawerMobileBackdrop: {\n    position: 'absolute'\n  }\n}));\n\nfunction Sidebar({ containerRef }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { labels, sidebarOpen } = useSelector((state) => state.mail);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = () => {\n    dispatch(openNewMessage());\n  };\n\n  useEffect(() => {\n    if (sidebarOpen) {\n      dispatch(closeSidebar());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <div>\n      <Box\n        px={3}\n        py={2}\n      >\n        <Button\n          color=\"secondary\"\n          fullWidth\n          variant=\"contained\"\n          onClick={handleComposeClick}\n        >\n          Compose\n        </Button>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pr={2}\n      >\n        <List>\n          {labels.map((label) => (\n            <LabelItem\n              key={label.id}\n              label={label}\n            />\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n\n  return (\n    <>\n      <Hidden smDown>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            root: classes.drawerDesktopRoot,\n            paper: classes.drawerDesktopPaper\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          open={sidebarOpen}\n          onClose={handleCloseSidebar}\n          classes={{\n            paper: classes.drawerMobilePaper\n          }}\n          style={{ position: 'absolute', zIndex: 1200 }}\n          BackdropProps={{ classes: { root: classes.drawerMobileBackdrop } }}\n          ModalProps={{ container: () => containerRef.current }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n}\n\nSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport {\n  Box,\n  Checkbox,\n  Hidden,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {\n  Search as SearchIcon,\n  Menu as MenuIcon\n} from 'react-feather';\nimport { openSidebar } from 'src/store/actions/mailActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    height: 68,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nfunction Toolbar({\n  className,\n  mails,\n  onDeselectAll,\n  onSelectAll,\n  selectedMails,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleOpenSidebar = () => {\n    dispatch(openSidebar());\n  };\n\n  const handleCheckboxChange = (event) => (event.target.checked ? onSelectAll() : onDeselectAll());\n\n  const selectedAllMails = selectedMails === mails && mails > 0;\n  const selectedSomeMails = selectedMails > 0 && selectedMails < mails;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Hidden mdUp>\n        <IconButton onClick={handleOpenSidebar}>\n          <SvgIcon fontSize=\"small\">\n            <MenuIcon />\n          </SvgIcon>\n        </IconButton>\n      </Hidden>\n      <Hidden smDown>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Checkbox\n            checked={selectedAllMails}\n            className={classes.checkbox}\n            indeterminate={selectedSomeMails}\n            onChange={handleCheckboxChange}\n          />\n          <Typography\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            Select all\n          </Typography>\n        </Box>\n        <Box flexGrow={1} />\n        <Paper\n          component={Box}\n          display=\"flex\"\n          alignItems=\"center\"\n          variant=\"outlined\"\n          py={0.5}\n          px={1}\n        >\n          <SvgIcon\n            color=\"action\"\n            fontSize=\"small\"\n          >\n            <SearchIcon />\n          </SvgIcon>\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search mail\"\n          />\n        </Paper>\n        <Tooltip title=\"Refresh\">\n          <IconButton>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"More options\">\n          <IconButton>\n            <MoreIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Tooltip title=\"Next page\">\n            <IconButton>\n              <KeyboardArrowLeftIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          {mails > 0 && (\n            <>\n              <Typography\n                noWrap\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                1 -\n                {' '}\n                {mails}\n                {' '}\n                of\n                {' '}\n                {mails}\n              </Typography>\n              <Tooltip title=\"Previous page\">\n                <IconButton>\n                  <KeyboardArrowRightIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n        </Box>\n      </Hidden>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  mails: PropTypes.number.isRequired,\n  onDeselectAll: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  selectedMails: PropTypes.number.isRequired\n};\n\nToolbar.defualtProps = {\n  onDeselectAll: () => {},\n  onSelectAll: () => {}\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Checkbox,\n  IconButton,\n  Hidden,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\nimport getInitials from 'src/utils/getInitials';\nimport { useSelector } from 'react-redux';\n\nfunction getTo(params, mailId) {\n  const { systemLabel, customLabel } = params;\n  const baseUrl = '/app/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${mailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${mailId}`;\n  }\n\n  return baseUrl;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  unread: {\n    position: 'relative',\n    '&:before': {\n      content: '\" \"',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: 4,\n      backgroundColor: theme.palette.error.main\n    },\n    '& $name, & $subject': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  },\n  selected: {\n    backgroundColor: theme.palette.action.selected\n  },\n  filterActive: {\n    color: colors.amber[400]\n  },\n  content: {\n    cursor: 'pointer',\n    textDecoration: 'none'\n  },\n  details: {\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      alignItems: 'center',\n      flexGrow: 1\n    }\n  },\n  name: {\n    [theme.breakpoints.up('md')]: {\n      minWidth: 180,\n      flexBasis: 180\n    }\n  },\n  subject: {\n    maxWidth: 400,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  message: {\n    maxWidth: 800,\n    flexGrow: 1,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: 'auto'\n  },\n  label: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.palette.common.white,\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 2,\n    paddingBottom: 2,\n    borderRadius: 2,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction MailItem({\n  className,\n  mail,\n  onDeselect,\n  onSelect,\n  selected,\n  ...rest\n}) {\n  const classes = useStyles();\n  const params = useParams();\n  const { labels } = useSelector((state) => state.mail);\n\n  const handleCheckboxChange = (event) => (event.target.checked ? onSelect() : onDeselect());\n\n  const handleStarToggle = () => {\n    // dispatch action\n  };\n\n  const handleImportantToggle = () => {\n    // dispatch action\n  };\n\n  const to = getTo(params, mail.id);\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.unread]: !mail.isUnread,\n          [classes.selected]: selected\n        },\n        className\n      )}\n      {...rest}\n    >\n      <Hidden smDown>\n        <Box\n          mr={1}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Checkbox\n            checked={selected}\n            onChange={handleCheckboxChange}\n          />\n          <Tooltip title=\"Starred\">\n            <IconButton onClick={handleStarToggle}>\n              {mail.isStarred ? (\n                <StarIcon className={classes.filterActive} />\n              ) : (\n                <StarBorderIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Important\">\n            <IconButton onClick={handleImportantToggle}>\n              {mail.isImportant ? (\n                <LabelImportantIcon className={classes.filterActive} />\n              ) : (\n                <LabelImportantOutlinedIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Hidden>\n      <Box\n        minWidth=\"1px\"\n        display=\"flex\"\n        flexGrow={1}\n        component={RouterLink}\n        to={to}\n        className={classes.content}\n      >\n        <Avatar src={mail.from.avatar}>\n          {getInitials(mail.from.name)}\n        </Avatar>\n        <Box\n          minWidth=\"1px\"\n          ml={1}\n          className={classes.details}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textPrimary\"\n            className={classes.name}\n          >\n            {mail.from.name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.subject}\n          >\n            {mail.subject}\n          </Typography>\n          <Hidden smDown>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              className={classes.message}\n            >\n              <Box\n                component=\"span\"\n                ml={2}\n              >\n                -\n              </Box>\n              {mail.message}\n            </Typography>\n            {mail.labelIds.length > 0 && (\n              <Box\n                display=\"flex\"\n                mx={2}\n              >\n                {mail.labelIds.map((labelId) => {\n                  const label = labels.find((_label) => _label.id === labelId);\n\n                  if (!label) return null;\n\n                  return (\n                    <span\n                      style={{ backgroundColor: label.color }}\n                      key={label.id}\n                      className={classes.label}\n                    >\n                      {label.name}\n                    </span>\n                  );\n                })}\n              </Box>\n            )}\n          </Hidden>\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(mail.createdAt).format('DD MMM YYYY')}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nMailItem.propTypes = {\n  className: PropTypes.string,\n  mail: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\n\nexport default MailItem;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Divider, makeStyles } from '@material-ui/core';\nimport { getMails } from 'src/store/actions/mailActions';\nimport Toolbar from './Toolbar';\nimport MailItem from './MailItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.dark\n  }\n}));\n\nfunction MailList() {\n  const classes = useStyles();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { mails } = useSelector((state) => state.mail);\n  const [selectedMails, setSelectedMails] = useState([]);\n\n  const handleSelectAllMails = () => {\n    setSelectedMails(mails.map((mail) => mail.id));\n  };\n\n  const handleDeselectAllMails = () => {\n    setSelectedMails([]);\n  };\n\n  const handleSelectOneMail = (mailId) => {\n    setSelectedMails((prevSelectedMails) => {\n      if (!prevSelectedMails.includes(mailId)) {\n        return [...prevSelectedMails, mailId];\n      }\n\n      return prevSelectedMails;\n    });\n  };\n\n  const handleDeselectOneMail = (mailId) => {\n    setSelectedMails((prevSelectedMails) => prevSelectedMails.filter((id) => id !== mailId));\n  };\n\n  useEffect(() => {\n    dispatch(getMails(params));\n  }, [dispatch, params]);\n\n  return (\n    <div className={classes.root}>\n      <Toolbar\n        onDeselectAll={handleDeselectAllMails}\n        onSelectAll={handleSelectAllMails}\n        selectedMails={selectedMails.length}\n        mails={mails.allIds.length}\n      />\n      <Divider />\n      {mails.allIds.map((mailId) => (\n        <MailItem\n          mail={mails.byId[mailId]}\n          key={mailId}\n          onDeselect={() => handleDeselectOneMail(mailId)}\n          onSelect={() => handleSelectOneMail(mailId)}\n          selected={selectedMails.includes(mailId)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default MailList;\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Hidden,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    height: 68,\n    flexShrink: 0,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nfunction Toolbar({ className, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { systemLabel, customLabel } = useParams();\n\n  const handleBack = () => {\n    if (systemLabel) {\n      return history.push(`/app/mail/${systemLabel}`);\n    }\n\n    if (customLabel) {\n      return history.push(`/app/mail/label/${customLabel}`);\n    }\n\n    return history.push('/app/mail/inbox');\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tooltip title=\"Back\">\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Box flexGrow={1} />\n      <Hidden mdDown>\n        <Paper\n          component={Box}\n          display=\"flex\"\n          alignItems=\"center\"\n          variant=\"outlined\"\n          py={0.5}\n          px={1}\n          mr={2}\n        >\n          <SearchIcon color=\"action\" />\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search message\"\n          />\n        </Paper>\n      </Hidden>\n      <Tooltip title=\"Previous mail\">\n        <IconButton>\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Next mail\">\n        <IconButton>\n          <KeyboardArrowRightIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React, { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Paper,\n  TextareaAutosize,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  textarea: {\n    ...theme.typography.body1,\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    border: 'none',\n    outline: 'none',\n    resize: 'none',\n    width: '100%'\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction MailReply({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        src={user.avatar}\n      />\n      <Paper\n        component={Box}\n        flexGrow={1}\n        padding={2}\n        variant=\"outlined\"\n      >\n        <TextareaAutosize\n          className={classes.textarea}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          rows={3}\n          value={value}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n}\n\nMailReply.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MailReply;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport Markdown from 'react-markdown/with-html';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Link,\n  Tooltip,\n  Typography,\n  makeStyles,\n  Hidden\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport ReplyIcon from '@material-ui/icons/ReplyOutlined';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAllOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport getInitials from 'src/utils/getInitials';\nimport { getMail } from 'src/store/actions/mailActions';\nimport Toolbar from './Toolbar';\nimport MailReply from './MailReply';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n    overflowY: 'auto'\n  },\n  avatar: {\n    height: 56,\n    width: 56\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  },\n  message: {\n    color: theme.palette.text.secondary,\n    '& > p': {\n      ...theme.typography.body1,\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nfunction MailDetails() {\n  const classes = useStyles();\n  const { mailId } = useParams();\n  const dispatch = useDispatch();\n  const mail = useSelector((state) => state.mail.mails.byId[mailId]);\n\n  useEffect(() => {\n    dispatch(getMail(mailId));\n  }, [dispatch, mailId]);\n\n  if (!mail) {\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Toolbar />\n      <Divider />\n      <Box\n        p={3}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        flexShrink={0}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={mail.from.avatar}\n          >\n            {getInitials(mail.from.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Typography\n              display=\"inline\"\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {mail.from.name}\n            </Typography>\n            {' '}\n            <Link\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {mail.from.email}\n            </Link>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              To:\n              {' '}\n              {mail.to.map((person) => (\n                <Link\n                  color=\"inherit\"\n                  key={person.email}\n                >\n                  {person.email}\n                </Link>\n              ))}\n            </Typography>\n            <Typography\n              className={classes.date}\n              color=\"textSecondary\"\n              variant=\"caption\"\n            >\n              {moment(mail.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Hidden smDown>\n            <Tooltip title=\"Reply\">\n              <IconButton>\n                <ReplyIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Reply all\">\n              <IconButton>\n                <ReplyAllIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton>\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton>\n              <MoreIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      <Divider />\n      <Box\n        flexGrow={1}\n        py={6}\n        px={3}\n        bgcolor=\"background.dark\"\n      >\n        <Typography\n          variant=\"h1\"\n          color=\"textPrimary\"\n        >\n          {mail.subject}\n        </Typography>\n        <Box mt={2}>\n          <Markdown\n            source={mail.message}\n            className={classes.message}\n          />\n        </Box>\n      </Box>\n      <Divider />\n      <MailReply />\n    </div>\n  );\n}\n\nexport default MailDetails;\n","import React, { useState } from 'react';\nimport {\n  useSelector,\n  useDispatch\n} from 'react-redux';\nimport {\n  Backdrop,\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Portal,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport {\n  X as XIcon,\n  Maximize as MaximizeIcon,\n  Minimize as MinimizeIcon\n} from 'react-feather';\nimport { closeNewMessage } from 'src/store/actions/mailActions';\nimport QuillEditor from 'src/components/QuillEditor';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: `calc(100% - ${theme.spacing(6)}px)`,\n    maxHeight: `calc(100% - ${theme.spacing(6)}px)`,\n    width: 600,\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    margin: theme.spacing(3),\n    outline: 'none',\n    zIndex: 2000,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 500\n  },\n  fullScreen: {\n    height: '100%',\n    width: '100%'\n  },\n  input: {\n    width: '100%'\n  },\n  editor: {\n    flexGrow: 1,\n    '& .ql-editor': {\n      minHeight: 300\n    }\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction MailNew() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { newMessageOpen } = useSelector((state) => state.mail);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n\n  const handleChange = (value) => {\n    setMessageBody(value);\n  };\n\n  const handleExitFullScreen = () => {\n    setFullScreen(false);\n  };\n\n  const handleEnterFullScreen = () => {\n    setFullScreen(true);\n  };\n\n  const handleClose = () => {\n    dispatch(closeNewMessage());\n  };\n\n  if (!newMessageOpen) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Backdrop open={fullScreen} />\n      <Paper\n        className={clsx(\n          classes.root,\n          { [classes.fullScreen]: fullScreen }\n        )}\n        elevation={12}\n      >\n        <Box\n          bgcolor=\"background.dark\"\n          display=\"flex\"\n          alignItems=\"center\"\n          py={1}\n          px={2}\n        >\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            New Message\n          </Typography>\n          <Box flexGrow={1} />\n          {fullScreen ? (\n            <IconButton onClick={handleExitFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MinimizeIcon />\n              </SvgIcon>\n            </IconButton>\n          ) : (\n            <IconButton onClick={handleEnterFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MaximizeIcon />\n              </SvgIcon>\n            </IconButton>\n          )}\n          <IconButton onClick={handleClose}>\n            <SvgIcon fontSize=\"small\">\n              <XIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Box p={2}>\n          <Input\n            className={classes.input}\n            disableUnderline\n            placeholder=\"To\"\n          />\n          <Input\n            className={classes.input}\n            disableUnderline\n            placeholder=\"Subject\"\n          />\n        </Box>\n        <Divider />\n        <QuillEditor\n          className={classes.editor}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          value={messageBody}\n        />\n        <Divider />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          py={1}\n          px={2}\n        >\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n    </Portal>\n  );\n}\n\nexport default MailNew;\n","import React, {\n  useEffect,\n  useRef\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getLabels } from 'src/store/actions/mailActions';\nimport Sidebar from './Sidebar';\nimport MailList from './MailList';\nimport MailDetails from './MailDetails';\nimport MailNew from './MailNew';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative'\n  }\n}));\n\nfunction MailView() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { mailId } = useParams();\n  const pageRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(getLabels());\n  }, [dispatch]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mail\"\n      ref={pageRef}\n    >\n      <Sidebar containerRef={pageRef} />\n      {mailId ? <MailDetails /> : <MailList />}\n      <MailNew />\n    </Page>\n  );\n}\n\nexport default MailView;\n"],"sourceRoot":""}