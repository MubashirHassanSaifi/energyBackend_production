{"version":3,"sources":["views/reports/ChartsView/AreaChart.js","views/reports/ChartsView/LineChart.js","views/reports/ChartsView/RadialChart.js","views/reports/ChartsView/Header.js","views/reports/ChartsView/index.js"],"names":["AreaChart","theme","useTheme","chartDataVa","useSelector","state","energy","chartData_Va","chartDataVb","chartData_Vb","chartDataVc","chartData_Vc","chartLabels","data","options","chart","background","palette","paper","toolbar","show","colors","dataLabels","enabled","grid","borderColor","divider","yaxis","lines","legend","labels","text","secondary","plotOptions","bar","columnWidth","stroke","width","mode","type","tooltip","xaxis","axisBorder","color","axisTicks","categories","style","series","name","Card","CardContent","Typography","variant","height","LineChart","chartDataIc","chartData_Ic","chartDataIa","chartData_Ia","chartDataIb","chartData_Ib","d","map","F","console","log","stacked","zoom","position","horizontalAlign","markers","size","strokeColors","strokeWidth","shape","radius","hover","undefined","sizeOffset","curve","opposite","RadialChart","radialBar","hollow","fontFamily","typography","primary","value","track","dark","align","component","timeRanges","useStyles","makeStyles","root","actionIcon","marginRight","spacing","Header","className","rest","classes","actionRef","useRef","userid","account","user","dispatch","useDispatch","useState","isMenuOpen","setMenuOpen","timeRange","setTimeRange","useEffect","getChartData","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","to","RouterLink","Button","ref","onClick","SvgIcon","Menu","anchorEl","current","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","t","MenuItem","key","defaultProps","backgroundColor","minHeight","paddingTop","paddingBottom","ApexChartsView","Page","title","Container","maxWidth","Box","mt","xs","md"],"mappings":"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","file":"static/js/34.140f7a0a.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { getChartData } from 'src/store/actions/energyAction';\nimport Chart from 'react-apexcharts';\n// import moment from 'moment';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  useTheme\n} from '@material-ui/core';\n\nfunction AreaChart() {\n  const theme = useTheme();\n  const chartDataVa = useSelector((state) => state.energy.chartData_Va);\n  const chartDataVb = useSelector((state) => state.energy.chartData_Vb);\n  const chartDataVc = useSelector((state) => state.energy.chartData_Vc);\n  const chartLabels = useSelector((state) => state.energy.chartLabels);\n  const data = {\n    options: {\n      chart: {\n        background: theme.palette.background.paper,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#13affe', '#fbab49', '#55fb49'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        show: true,\n        labels: {\n          colors: theme.palette.text.secondary\n        }\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '100%'\n        }\n      },\n      stroke: {\n        show: true,\n        width: 1,\n        colors: ['transparent']\n      },\n      theme: {\n        mode: theme.palette.type\n      },\n      tooltip: {\n        theme: theme.palette.type\n      },\n      xaxis: {\n        axisBorder: {\n          show: true,\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          show: true,\n          color: theme.palette.divider\n        },\n        categories: chartLabels,\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: {\n        axisBorder: {\n          show: true,\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          show: true,\n          color: theme.palette.divider\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      }\n    },\n    series: [\n      {\n        name: 'Phase-A',\n        data: chartDataVa\n      },\n      {\n        name: 'Phase-B',\n        data: chartDataVb\n      },\n      {\n        name: 'Phase-C',\n        data: chartDataVc\n      }\n    ]\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Voltages\n        </Typography>\n        <Chart\n          options={data.options}\n          series={data.series}\n          type=\"bar\"\n          height=\"300\"\n        />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default AreaChart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Chart from 'react-apexcharts';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  useTheme,\n  // CircularProgress\n} from '@material-ui/core';\n\nfunction LineChart() {\n  const theme = useTheme();\n  // const chartloading = useSelector((state) => state.energy.chartloading);\n  const chartDataIc = useSelector((state) => state.energy.chartData_Ic);\n  const chartDataIa = useSelector((state) => state.energy.chartData_Ia);\n  const chartDataIb = useSelector((state) => state.energy.chartData_Ib);\n  const chartLabels = useSelector((state) => state.energy.chartLabels);\n  const d = chartDataIc.map((F) => F);\n  console.log('type', d);\n\n  const chart = {\n    options: {\n      chart: {\n\n        background: theme.palette.background.paper,\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n\n        zoom: false\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '25%'\n        }\n      },\n      colors: ['#1f87e6', '#E14827', '#1fe647'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        show: true,\n        position: 'top',\n        horizontalAlign: 'center',\n        labels: {\n          colors: theme.palette.text.secondary\n        }\n      },\n      markers: {\n        size: 4,\n        strokeColors: ['#1f87e6', '#27c6db', '#112F4D'],\n        strokeWidth: 0,\n        shape: 'circle',\n        radius: 3,\n        hover: {\n          size: undefined,\n          sizeOffset: 3\n        }\n      },\n      stroke: {\n        width: [4, 4, 4],\n        curve: 'smooth',\n\n      },\n      theme: {\n        mode: theme.palette.type\n      },\n      tooltip: {\n        theme: theme.palette.type\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          show: true,\n          color: theme.palette.divider\n        },\n        categories: chartLabels,\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: [\n        {\n          axisBorder: {\n            show: true,\n            color: theme.palette.divider\n          },\n          axisTicks: {\n            show: true,\n            color: theme.palette.divider\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          }\n        },\n        {\n          axisTicks: {\n            show: true,\n            color: theme.palette.divider\n          },\n          axisBorder: {\n            show: true,\n            color: theme.palette.divider\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          },\n          opposite: true\n        }\n      ]\n    },\n    series:\n      [\n        {\n          type: 'line',\n          name: 'Phase-A',\n          data: chartDataIa\n        },\n        {\n          type: 'line',\n          name: 'Phase-B',\n          data: chartDataIb\n        },\n        {\n\n          name: 'Phase-C',\n          data: chartDataIc\n        },\n\n      ],\n\n\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Current\n        </Typography>\n\n\n        <Chart\n          type=\"line\"\n          height=\"300\"\n          {...chart}\n        />\n\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LineChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  useTheme\n} from '@material-ui/core';\n\nfunction RadialChart() {\n  const theme = useTheme();\n\n  const data = {\n    options: {\n      chart: {\n        background: theme.palette.background.paper,\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#27c6db'],\n      labels: ['System Health'],\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            size: '60%',\n          },\n          dataLabels: {\n            name: {\n              fontFamily: theme.typography.fontFamily,\n              color: theme.palette.text.primary\n            },\n            value: {\n              color: theme.palette.text.secondary\n            }\n          },\n          track: {\n            background: theme.palette.background.dark\n          }\n        }\n      },\n      theme: {\n        mode: theme.palette.type\n      }\n    },\n    series: [83]\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Chart\n          options={data.options}\n          series={data.series}\n          type=\"radialBar\"\n          height=\"300\"\n        />\n        <Typography\n          align=\"center\"\n          color=\"textSecondary\"\n          variant=\"caption\"\n          component=\"p\"\n        >\n          This shouldn&apos;t be bellow 80%\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default RadialChart;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getChartData } from 'src/store/actions/energyAction';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'week',\n    text: 'Last Week'\n  },\n  {\n    value: 'month',\n    text: 'Last Month'\n  },\n  {\n    value: 'year',\n    text: 'Last Year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const user = useSelector((state) => state.account.user);\n  const { userid } = user;\n  const dispatch = useDispatch();\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[0].value);\n  useEffect(() => {\n    dispatch(getChartData(timeRange, userid));\n  }, [timeRange]);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Charts\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Graphs\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.text}\n              onClick={() => setTimeRange(t.value)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Breadcrumbs,\n  Container,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Page from 'src/components/Page';\nimport AreaChart from './AreaChart';\nimport LineChart from './LineChart';\nimport RadialChart from './RadialChart';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n\n}));\n\nfunction ApexChartsView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Charts\"\n    >\n      <Container maxWidth=\"lg\">\n\n        <Header />\n\n        <Box mt={3}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <LineChart />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={8}\n              // lg={12}\n            >\n              <AreaChart />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={4}\n            >\n              <RadialChart />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ApexChartsView;\n"],"sourceRoot":""}